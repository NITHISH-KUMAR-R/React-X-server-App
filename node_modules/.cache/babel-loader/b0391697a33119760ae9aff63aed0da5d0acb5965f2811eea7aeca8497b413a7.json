{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nithi\\\\Downloads\\\\NewProjects\\\\react-client\\\\src\\\\Component\\\\Friend3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport './Friend3.css';\nimport FriendsNavbar from './FriendsNavbar';\nimport Loading from './Loading'; // Import the Loading component\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friend3 = () => {\n  _s();\n  const [allUsers, setAllUsers] = useState([]);\n  const [sentRequests, setSentRequests] = useState(new Set());\n  const [receivedRequests, setReceivedRequests] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  const fetchAllUsers = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get(`${baseurl}/friend/unkownuser`, {\n        withCredentials: true\n      });\n      const allUserData = response.data;\n      setAllUsers(allUserData);\n      setLoading(false); // Data fetched successfully, stop loading\n    } catch (error) {\n      console.error('Error fetching all users:', error);\n      setError('Error fetching users'); // Set error message\n      setLoading(false); // Stop loading on error\n    }\n  }, []);\n  const fetchPendingRequests = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get(`${baseurl}/friend/pendingReq`, {\n        withCredentials: true\n      });\n      const {\n        sentRequests,\n        receivedRequests\n      } = response.data;\n      setSentRequests(new Set(sentRequests.map(request => request.receiver._id)));\n      setReceivedRequests(receivedRequests);\n    } catch (error) {\n      console.error('Error fetching pending requests:', error);\n      setError('Error fetching pending requests'); // Set error message\n    }\n  }, []);\n  useEffect(() => {\n    fetchAllUsers();\n    fetchPendingRequests();\n  }, [fetchAllUsers, fetchPendingRequests]);\n  const sendFriendRequest = useCallback(async userId => {\n    try {\n      await axiosInstance.post(`${baseurl}/friend/req/${userId}`, {}, {\n        withCredentials: true\n      });\n      setSentRequests(prevSentRequests => new Set([...prevSentRequests, userId]));\n\n      // Fetch updated pending requests to reflect changes immediately\n      fetchPendingRequests();\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n      setError('Error sending friend request'); // Set error message\n    }\n  }, [fetchPendingRequests]);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this); // Use the Loading component\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this); // Display error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FriendsNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-friend3\",\n      children: allUsers.length > 0 ? allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [capitalizeFirstLetter(user.username), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendFriendRequest(user._id),\n          className: \"button\",\n          disabled: sentRequests.has(user._id) || receivedRequests.some(request => request.sender._id === user._id),\n          children: sentRequests.has(user._id) ? 'Request Sent' : receivedRequests.some(request => request.sender._id === user._id) ? 'Request Received' : 'Send Request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) // Display message if no users are found\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Friend3, \"M64vWoBZcc2ClA/KdiZlNDiSoQg=\");\n_c = Friend3;\nexport default Friend3;\nvar _c;\n$RefreshReg$(_c, \"Friend3\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","baseurl","axiosInstance","FriendsNavbar","Loading","Navbar","jsxDEV","_jsxDEV","Friend3","_s","allUsers","setAllUsers","sentRequests","setSentRequests","Set","receivedRequests","setReceivedRequests","loading","setLoading","error","setError","fetchAllUsers","response","get","withCredentials","allUserData","data","console","fetchPendingRequests","map","request","receiver","_id","sendFriendRequest","userId","post","prevSentRequests","capitalizeFirstLetter","string","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","children","className","length","user","username","onClick","disabled","has","some","sender","_c","$RefreshReg$"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/Friend3.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\nimport './Friend3.css';\r\nimport FriendsNavbar from './FriendsNavbar';\r\nimport Loading from './Loading'; // Import the Loading component\r\nimport Navbar from './Navbar';\r\n\r\nconst Friend3=() => {\r\n    const [allUsers, setAllUsers]=useState( [] );\r\n    const [sentRequests, setSentRequests]=useState( new Set() );\r\n    const [receivedRequests, setReceivedRequests]=useState( [] );\r\n    const [loading, setLoading]=useState( true ); // Loading state\r\n    const [error, setError]=useState( null ); // Error state\r\n\r\n    const fetchAllUsers=useCallback( async () => {\r\n        try {\r\n            const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\r\n                withCredentials: true,\r\n            } );\r\n            const allUserData=response.data;\r\n            setAllUsers( allUserData );\r\n            setLoading( false ); // Data fetched successfully, stop loading\r\n        } catch ( error ) {\r\n            console.error( 'Error fetching all users:', error );\r\n            setError( 'Error fetching users' ); // Set error message\r\n            setLoading( false ); // Stop loading on error\r\n        }\r\n    }, [] );\r\n\r\n    const fetchPendingRequests=useCallback( async () => {\r\n        try {\r\n            const response=await axiosInstance.get( `${ baseurl }/friend/pendingReq`, {\r\n                withCredentials: true,\r\n            } );\r\n            const { sentRequests, receivedRequests }=response.data;\r\n\r\n            setSentRequests( new Set( sentRequests.map( request => request.receiver._id ) ) );\r\n            setReceivedRequests( receivedRequests );\r\n        } catch ( error ) {\r\n            console.error( 'Error fetching pending requests:', error );\r\n            setError( 'Error fetching pending requests' ); // Set error message\r\n        }\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        fetchAllUsers();\r\n        fetchPendingRequests();\r\n    }, [fetchAllUsers, fetchPendingRequests] );\r\n\r\n    const sendFriendRequest=useCallback( async ( userId ) => {\r\n        try {\r\n            await axiosInstance.post(\r\n                `${ baseurl }/friend/req/${ userId }`,\r\n                {},\r\n                { withCredentials: true }\r\n            );\r\n\r\n            setSentRequests( prevSentRequests => new Set( [...prevSentRequests, userId] ) );\r\n\r\n            // Fetch updated pending requests to reflect changes immediately\r\n            fetchPendingRequests();\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n            setError( 'Error sending friend request' ); // Set error message\r\n        }\r\n    }, [fetchPendingRequests] );\r\n\r\n    const capitalizeFirstLetter=( string ) => {\r\n        return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\r\n    };\r\n\r\n    if ( loading ) {\r\n        return <Loading />; // Use the Loading component\r\n    }\r\n\r\n    if ( error ) {\r\n        return <div>{error}</div>; // Display error message\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <FriendsNavbar />\r\n            <div className='container-friend3'>\r\n                {allUsers.length>0? (\r\n                    allUsers.map( user => (\r\n                        <li key={user._id}>\r\n                            {capitalizeFirstLetter( user.username )}\r\n                            <button\r\n                                onClick={() => sendFriendRequest( user._id )}\r\n                                className='button'\r\n                                disabled={sentRequests.has( user._id )||receivedRequests.some( request => request.sender._id===user._id )}\r\n                            >\r\n                                {sentRequests.has( user._id )? 'Request Sent':( receivedRequests.some( request => request.sender._id===user._id )? 'Request Received':'Send Request' )}\r\n                            </button>\r\n                        </li>\r\n                    ) )\r\n                ):(\r\n                    <div>No users found</div> // Display message if no users are found\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}