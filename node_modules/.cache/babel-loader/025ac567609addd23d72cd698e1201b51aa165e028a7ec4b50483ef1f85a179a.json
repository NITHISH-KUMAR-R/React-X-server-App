{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nithi\\\\Downloads\\\\NewProjects\\\\react-client\\\\src\\\\Component\\\\About.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Timeline.css';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchUserPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/all`, {\n          withCredentials: true // Ensure credentials are included\n        });\n        console.log(response);\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error while fetching posts', error);\n      }\n    };\n    fetchUserPosts();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logged User's Posts Only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      // Assuming _id is a unique identifier\n      userPost: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axiosInstance","jsxDEV","_jsxDEV","About","_s","posts","setPosts","fetchUserPosts","response","get","withCredentials","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","userPost","_id","_c","$RefreshReg$"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/About.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Timeline.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\nconst About=() => {\r\n    const [posts, setPosts]=useState( [] );\r\n\r\n    useEffect( () => {\r\n        const fetchUserPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/all`, {\r\n                    withCredentials: true // Ensure credentials are included\r\n                } );\r\n                console.log( response );\r\n                setPosts( response.data );\r\n            } catch ( error ) {\r\n                console.error( 'Error while fetching posts', error );\r\n            }\r\n        };\r\n\r\n        fetchUserPosts();\r\n    }, [] ); // Empty dependency array ensures useEffect runs only once\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <Navbar />\r\n            <h2>Logged User's Posts Only</h2>\r\n            {posts.map( post => (\r\n                <Card\r\n                    key={post._id} // Assuming _id is a unique identifier\r\n                    userPost={post}\r\n                />\r\n            ) )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAACA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACV,QAAQ,CAAE,EAAG,CAAC;EAEtCD,SAAS,CAAE,MAAM;IACb,MAAMY,cAAc,GAAC,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAC,MAAMR,aAAa,CAACS,GAAG,CAAG,GAAGV,OAAS,UAAS,EAAE;UAC5DW,eAAe,EAAE,IAAI,CAAC;QAC1B,CAAE,CAAC;QACHC,OAAO,CAACC,GAAG,CAAEJ,QAAS,CAAC;QACvBF,QAAQ,CAAEE,QAAQ,CAACK,IAAK,CAAC;MAC7B,CAAC,CAAC,OAAQC,KAAK,EAAG;QACdH,OAAO,CAACG,KAAK,CAAE,4BAA4B,EAAEA,KAAM,CAAC;MACxD;IACJ,CAAC;IAEDP,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAG,CAAC,CAAC,CAAC;;EAET,oBACIL,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bd,OAAA,CAACJ,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlB,OAAA;MAAAc,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCf,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZpB,OAAA,CAACL,IAAI;MACc;MACf0B,QAAQ,EAAED;IAAK,GADVA,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAChB,EAAA,CA/BID,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}