{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hello\\\\NewProjects\\\\react-client\\\\src\\\\Home\\\\homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Navbar from '../Component/Navbar';\nimport './home.css';\nimport { baseurl } from '../url';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [postMessage, setPostMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    try {\n      const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).token : '';\n      const response = await fetch(`${baseurl}/msg/post`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Include the token in the Authorization header\n        },\n        body: JSON.stringify({\n          postMessage\n        }),\n        credentials: 'include' // Include credentials with each request\n      });\n      const data = await response.text();\n      if (response.ok) {\n        setSuccessMessage('Thought posted successfully!');\n        setPostMessage(''); // Clear the input field on successful post\n      } else {\n        setSuccessMessage('');\n        console.error('Error:', data);\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      setSuccessMessage('');\n    }\n  }, [postMessage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Homecontainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Share your thoughts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: postMessage,\n            onChange: e => setPostMessage(e.target.value),\n            placeholder: \"Write your message here...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-messagess\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Homepage, \"cOvD3SjcfKZY5aXHr5TD4VRO7sA=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","useCallback","Navbar","baseurl","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","postMessage","setPostMessage","successMessage","setSuccessMessage","handleSubmit","event","preventDefault","token","localStorage","getItem","JSON","parse","response","fetch","method","headers","body","stringify","credentials","data","text","ok","console","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["D:/Hello/NewProjects/react-client/src/Home/homepage.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport Navbar from '../Component/Navbar';\r\nimport './home.css';\r\nimport { baseurl } from '../url';\r\n\r\nconst Homepage=() => {\r\n    const [postMessage, setPostMessage]=useState( '' );\r\n    const [successMessage, setSuccessMessage]=useState( '' );\r\n\r\n    const handleSubmit=useCallback( async ( event ) => {\r\n        event.preventDefault();\r\n        try {\r\n            const token=localStorage.getItem( 'user' )? JSON.parse( localStorage.getItem( 'user' ) ).token:'';\r\n            const response=await fetch( `${ baseurl }/msg/post`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${ token }` // Include the token in the Authorization header\r\n                },\r\n                body: JSON.stringify( { postMessage } ),\r\n                credentials: 'include', // Include credentials with each request\r\n            } );\r\n            const data=await response.text();\r\n            if ( response.ok ) {\r\n                setSuccessMessage( 'Thought posted successfully!' );\r\n                setPostMessage( '' ); // Clear the input field on successful post\r\n            } else {\r\n                setSuccessMessage( '' );\r\n                console.error( 'Error:', data );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( 'Error:', error.message );\r\n            setSuccessMessage( '' );\r\n        }\r\n    }, [postMessage] );\r\n\r\n    return (\r\n        <>\r\n            <div className='Homecontainer'>\r\n                <Navbar />\r\n                <div className='home-container'>\r\n                    <h1>Share your thoughts</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea\r\n                            value={postMessage}\r\n                            onChange={( e ) => setPostMessage( e.target.value )}\r\n                            placeholder='Write your message here...'\r\n                            required\r\n                        />\r\n                        <button type='submit'>Post</button>\r\n                    </form>\r\n                    {successMessage&&(\r\n                        <p className='success-messagess'>{successMessage}</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}