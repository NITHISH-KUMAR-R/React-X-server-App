{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_jsProject\\\\react-client\\\\src\\\\Component\\\\FriendsPostonly.jsx\",\n  _s = $RefreshSig$();\n// src/Component/FriendPosts.js\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Card.css';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axios from 'axios';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst FriendPosts = () => {\n  _s();\n  const [friendPosts, setFriendPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFriendPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/displayFrndPost`, {\n          withCredentials: true\n        });\n        setFriendPosts(response.data.friendPosts || []);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching friend posts:', error);\n        setLoading(false);\n      }\n    };\n    fetchFriendPosts();\n  }, []);\n  const likePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/likes/${postId}`);\n      console.log(`Liked post with ID: ${postId}`, response);\n      console.log(response.data);\n      if (response.status == 200) {\n        const updatedPost = response.data.post;\n        setFriendPosts(prevPost => prevPost.map(post => ({\n          ...post,\n          messagesList: post.messagesList.map(message => {\n            message._id === postId ? {\n              ...message,\n              likes: updatedPost.likes\n            } : message;\n          })\n        })));\n      }\n    } catch (error) {\n      console.error(`Error liking post with ID: ${postId}`, error);\n    }\n  };\n  const dislikePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/dislike/${postId}`);\n      console.log(`Disliked post with ID: ${postId}`, response);\n      if (response.status === 200) {\n        const updatedPost = response.data.post;\n        setFriendPosts(prevPosts => prevPosts.map(post => ({\n          ...post,\n          messagesList: post.messagesList.map(message => message._id === postId ? {\n            ...message,\n            disLikes: updatedPost.disLikes\n          } : message)\n        })));\n      }\n    } catch (error) {\n      console.error(`Error disliking post with ID: ${postId}`, error);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friend posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length > 0 && friendPosts.map(post => post.messagesList && post.messagesList.map(message => {\n      var _post$username;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        username: ((_post$username = post.username) === null || _post$username === void 0 ? void 0 : _post$username.toUpperCase()) || 'Unknown',\n        userPost: message.userPost,\n        likes: message.likes,\n        disLikes: message.disLikes,\n        date: formatDate(message.date),\n        onLike: () => likePost(message._id) // Pass the likePost function with the messageId\n        ,\n        onDislike: () => dislikePost(message._id) // Pass the dislikePost function with the messageId\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendPosts, \"+24iiFbqDOWH1RRoR/WfnIgTkt0=\");\n_c = FriendPosts;\nexport default FriendPosts;\nvar _c;\n$RefreshReg$(_c, \"FriendPosts\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axios","axiosInstance","jsxDEV","_jsxDEV","defaults","withCredentials","FriendPosts","_s","friendPosts","setFriendPosts","loading","setLoading","fetchFriendPosts","response","get","data","error","console","likePost","postId","post","log","status","updatedPost","prevPost","map","messagesList","message","_id","likes","dislikePost","prevPosts","disLikes","formatDate","dateString","options","year","month","day","date","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_post$username","username","toUpperCase","userPost","onLike","onDislike","_c","$RefreshReg$"],"sources":["D:/Node_jsProject/react-client/src/Component/FriendsPostonly.jsx"],"sourcesContent":["// src/Component/FriendPosts.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Card.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axios from 'axios';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\nconst FriendPosts=() => {\r\n    const [friendPosts, setFriendPosts]=useState( [] );\r\n    const [loading, setLoading]=useState( true );\r\n\r\n    useEffect( () => {\r\n        const fetchFriendPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/displayFrndPost`, {\r\n                    withCredentials: true\r\n                } );\r\n\r\n                setFriendPosts( response.data.friendPosts||[] );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching friend posts:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchFriendPosts();\r\n    }, [] );\r\n\r\n    const likePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/likes/${ postId }` );\r\n            console.log( `Liked post with ID: ${ postId }`, response );\r\n\r\n            console.log( response.data )\r\n\r\n            if ( response.status==200 ) {\r\n                const updatedPost=response.data.post;\r\n                setFriendPosts( ( prevPost ) =>\r\n                    prevPost.map( ( post ) => ( {\r\n\r\n                        ...post,\r\n                        messagesList: post.messagesList.map( ( message ) => {\r\n                            message._id===postId? { ...message, likes: updatedPost.likes }\r\n                                :message\r\n                        } )\r\n                    } ) ) )\r\n            }\r\n\r\n        } catch ( error ) {\r\n            console.error( `Error liking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const dislikePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/dislike/${ postId }` );\r\n            console.log( `Disliked post with ID: ${ postId }`, response );\r\n\r\n            if ( response.status===200 ) {\r\n                const updatedPost=response.data.post;\r\n                setFriendPosts( ( prevPosts ) =>\r\n                    prevPosts.map( ( post ) => ( {\r\n                        ...post,\r\n                        messagesList: post.messagesList.map( ( message ) =>\r\n                            message._id===postId\r\n                                ? { ...message, disLikes: updatedPost.disLikes }\r\n                                :message\r\n                        )\r\n                    } ) )\r\n                );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( `Error disliking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const formatDate=( dateString ) => {\r\n        const options={ year: 'numeric', month: 'long', day: 'numeric' };\r\n        const date=new Date( dateString );\r\n        return date.toLocaleDateString( undefined, options );\r\n    };\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <Navbar />\r\n\r\n            {loading&&(\r\n                <div className=\"loading-spinner\"></div>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length===0&&(\r\n                <p>No friend posts available.</p>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length>0&&(\r\n                friendPosts.map( post => (\r\n                    post.messagesList&&post.messagesList.map( message => (\r\n                        <Card\r\n                            key={message._id}\r\n                            username={post.username?.toUpperCase()||'Unknown'}\r\n                            userPost={message.userPost}\r\n                            likes={message.likes}\r\n                            disLikes={message.disLikes}\r\n                            date={formatDate( message.date )}\r\n                            onLike={() => likePost( message._id )} // Pass the likePost function with the messageId\r\n                            onDislike={() => dislikePost( message._id )} // Pass the dislikePost function with the messageId\r\n                        />\r\n                    ) )\r\n                ) )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendPosts;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,YAAY;AACnB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3CH,KAAK,CAACI,QAAQ,CAACC,eAAe,GAAC,IAAI;AAEnC,MAAMC,WAAW,GAACA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAACb,QAAQ,CAAE,EAAG,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAACf,QAAQ,CAAE,IAAK,CAAC;EAE5CD,SAAS,CAAE,MAAM;IACb,MAAMiB,gBAAgB,GAAC,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAC,MAAMZ,aAAa,CAACa,GAAG,CAAE,GAAIf,OAAO,sBAAuB,EAAE;UACxEM,eAAe,EAAE;QACrB,CAAE,CAAC;QAEHI,cAAc,CAAEI,QAAQ,CAACE,IAAI,CAACP,WAAW,IAAE,EAAG,CAAC;QAC/CG,UAAU,CAAE,KAAM,CAAC;MACvB,CAAC,CAAC,OAAQK,KAAK,EAAG;QACdC,OAAO,CAACD,KAAK,CAAE,8BAA8B,EAAEA,KAAM,CAAC;QACtDL,UAAU,CAAE,KAAM,CAAC;MACvB;IACJ,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMM,QAAQ,GAAC,MAAQC,MAAM,IAAM;IAC/B,IAAI;MACA,MAAMN,QAAQ,GAAC,MAAMZ,aAAa,CAACmB,IAAI,CAAE,GAAIrB,OAAO,gBAAkBoB,MAAM,EAAI,CAAC;MACjFF,OAAO,CAACI,GAAG,CAAE,uBAAwBF,MAAM,EAAG,EAAEN,QAAS,CAAC;MAE1DI,OAAO,CAACI,GAAG,CAAER,QAAQ,CAACE,IAAK,CAAC;MAE5B,IAAKF,QAAQ,CAACS,MAAM,IAAE,GAAG,EAAG;QACxB,MAAMC,WAAW,GAACV,QAAQ,CAACE,IAAI,CAACK,IAAI;QACpCX,cAAc,CAAIe,QAAQ,IACtBA,QAAQ,CAACC,GAAG,CAAIL,IAAI,KAAQ;UAExB,GAAGA,IAAI;UACPM,YAAY,EAAEN,IAAI,CAACM,YAAY,CAACD,GAAG,CAAIE,OAAO,IAAM;YAChDA,OAAO,CAACC,GAAG,KAAGT,MAAM,GAAE;cAAE,GAAGQ,OAAO;cAAEE,KAAK,EAAEN,WAAW,CAACM;YAAM,CAAC,GACzDF,OAAO;UAChB,CAAE;QACN,CAAC,CAAG,CAAE,CAAC;MACf;IAEJ,CAAC,CAAC,OAAQX,KAAK,EAAG;MACdC,OAAO,CAACD,KAAK,CAAE,8BAA+BG,MAAM,EAAG,EAAEH,KAAM,CAAC;IACpE;EACJ,CAAC;EAED,MAAMc,WAAW,GAAC,MAAQX,MAAM,IAAM;IAClC,IAAI;MACA,MAAMN,QAAQ,GAAC,MAAMZ,aAAa,CAACmB,IAAI,CAAE,GAAIrB,OAAO,kBAAoBoB,MAAM,EAAI,CAAC;MACnFF,OAAO,CAACI,GAAG,CAAE,0BAA2BF,MAAM,EAAG,EAAEN,QAAS,CAAC;MAE7D,IAAKA,QAAQ,CAACS,MAAM,KAAG,GAAG,EAAG;QACzB,MAAMC,WAAW,GAACV,QAAQ,CAACE,IAAI,CAACK,IAAI;QACpCX,cAAc,CAAIsB,SAAS,IACvBA,SAAS,CAACN,GAAG,CAAIL,IAAI,KAAQ;UACzB,GAAGA,IAAI;UACPM,YAAY,EAAEN,IAAI,CAACM,YAAY,CAACD,GAAG,CAAIE,OAAO,IAC1CA,OAAO,CAACC,GAAG,KAAGT,MAAM,GACd;YAAE,GAAGQ,OAAO;YAAEK,QAAQ,EAAET,WAAW,CAACS;UAAS,CAAC,GAC/CL,OACT;QACJ,CAAC,CAAG,CACR,CAAC;MACL;IACJ,CAAC,CAAC,OAAQX,KAAK,EAAG;MACdC,OAAO,CAACD,KAAK,CAAE,iCAAkCG,MAAM,EAAG,EAAEH,KAAM,CAAC;IACvE;EACJ,CAAC;EAED,MAAMiB,UAAU,GAAGC,UAAU,IAAM;IAC/B,MAAMC,OAAO,GAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC;IAChE,MAAMC,IAAI,GAAC,IAAIC,IAAI,CAAEN,UAAW,CAAC;IACjC,OAAOK,IAAI,CAACE,kBAAkB,CAAEC,SAAS,EAAEP,OAAQ,CAAC;EACxD,CAAC;EAED,oBACIhC,OAAA;IAAKwC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BzC,OAAA,CAACL,MAAM;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAETtC,OAAO,iBACJP,OAAA;MAAKwC,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACzC,EAEA,CAACtC,OAAO,IAAEF,WAAW,CAACyC,MAAM,KAAG,CAAC,iBAC7B9C,OAAA;MAAAyC,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC,EAEA,CAACtC,OAAO,IAAEF,WAAW,CAACyC,MAAM,GAAC,CAAC,IAC3BzC,WAAW,CAACiB,GAAG,CAAEL,IAAI,IACjBA,IAAI,CAACM,YAAY,IAAEN,IAAI,CAACM,YAAY,CAACD,GAAG,CAAEE,OAAO;MAAA,IAAAuB,cAAA;MAAA,oBAC7C/C,OAAA,CAACN,IAAI;QAEDsD,QAAQ,EAAE,EAAAD,cAAA,GAAA9B,IAAI,CAAC+B,QAAQ,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,WAAW,CAAC,CAAC,KAAE,SAAU;QAClDC,QAAQ,EAAE1B,OAAO,CAAC0B,QAAS;QAC3BxB,KAAK,EAAEF,OAAO,CAACE,KAAM;QACrBG,QAAQ,EAAEL,OAAO,CAACK,QAAS;QAC3BO,IAAI,EAAEN,UAAU,CAAEN,OAAO,CAACY,IAAK,CAAE;QACjCe,MAAM,EAAEA,CAAA,KAAMpC,QAAQ,CAAES,OAAO,CAACC,GAAI,CAAE,CAAC;QAAA;QACvC2B,SAAS,EAAEA,CAAA,KAAMzB,WAAW,CAAEH,OAAO,CAACC,GAAI,CAAE,CAAC;MAAA,GAPxCD,OAAO,CAACC,GAAG;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQnB,CAAC;IAAA,CACJ,CACJ,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzC,EAAA,CA1GID,WAAW;AAAAkD,EAAA,GAAXlD,WAAW;AA4GjB,eAAeA,WAAW;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}