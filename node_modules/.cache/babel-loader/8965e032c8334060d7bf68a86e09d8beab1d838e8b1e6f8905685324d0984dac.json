{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_jsProject\\\\react-client\\\\src\\\\Login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './login.css'; // Import the custom CSS\nimport { baseurl } from \"../url\";\nimport axiosInstance from \"../axiosConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true; // Ensure cookies are sent with each request\n\nconst Login = () => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Add error message state\n\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }, []);\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/user/login`, {\n        email: formData.email,\n        password: formData.password\n      });\n      localStorage.setItem('user', JSON.stringify(response.data));\n      setSuccessMessage('Login successful! Redirecting to homepage...');\n      setErrorMessage('');\n      setTimeout(() => {\n        navigate('/homepage');\n      }, 2000); // Delay for 2 seconds before redirecting\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      setErrorMessage('Login unsuccessful. Please check your email and password.');\n      setSuccessMessage('');\n    }\n  };\n  const handleSignup = async () => {\n    try {\n      console.log(\"Sending signup data:\", {\n        name: formData.username,\n        email: formData.email,\n        password: formData.password\n      });\n      const response = await axiosInstance.post(`${baseurl}/reg/newUserReg`, {\n        name: formData.username,\n        email: formData.email,\n        password: formData.password\n      });\n      setSuccessMessage('Signup successful! Redirecting to login page...');\n      setErrorMessage('');\n      setTimeout(() => {\n        window.location.reload();\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      if (error.response && error.response.status === 409) {\n        // Check the specific error message from the backend\n        if (error.response.data.message === 'Email already in use') {\n          setErrorMessage('Email already in use. Please use a different email.');\n        } else if (error.response.data.message === 'Username already in use') {\n          setErrorMessage('Username already in use. Please use a different username.');\n        } else {\n          setErrorMessage('Signup unsuccessful. Please try again.');\n        }\n      } else {\n        setErrorMessage('Signup unsuccessful. Please try again.');\n      }\n      setSuccessMessage('');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    setErrorMessage(''); // Clear previous error messages\n    if (isLoginMode) {\n      handleLogin();\n    } else {\n      handleSignup();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isLoginMode ? 'Login' : 'Signup'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              name: \"username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-submit\",\n            children: isLoginMode ? 'Login' : 'Signup'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 38\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 36\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"toggle-mode\",\n          onClick: () => setIsLoginMode(!isLoginMode),\n          children: isLoginMode ? 'New User? Sign Up' : 'Already have an account? Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"i4Co3l5Cfb0Kq/4kyJJIVtPiABQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","axios","baseurl","axiosInstance","jsxDEV","_jsxDEV","defaults","withCredentials","Login","_s","isLoginMode","setIsLoginMode","formData","setFormData","username","email","password","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleInputChange","e","name","value","target","prevState","navigate","handleLogin","response","post","localStorage","setItem","JSON","stringify","data","setTimeout","error","console","handleSignup","log","window","location","reload","status","message","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/Node_jsProject/react-client/src/Login/login.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './login.css'; // Import the custom CSS\r\nimport { baseurl } from \"../url\";\r\nimport axiosInstance from \"../axiosConfig\";\r\n\r\naxios.defaults.withCredentials=true; // Ensure cookies are sent with each request\r\n\r\nconst Login=() => {\r\n    const [isLoginMode, setIsLoginMode]=useState( true );\r\n    const [formData, setFormData]=useState( {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    } );\r\n    const [successMessage, setSuccessMessage]=useState( '' );\r\n    const [errorMessage, setErrorMessage]=useState( '' ); // Add error message state\r\n\r\n    const handleInputChange=useCallback( ( e ) => {\r\n        const { name, value }=e.target;\r\n        setFormData( prevState => ( { ...prevState, [name]: value } ) );\r\n    }, [] );\r\n\r\n    const navigate=useNavigate();\r\n\r\n    const handleLogin=async () => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/user/login`, {\r\n                email: formData.email,\r\n                password: formData.password\r\n            } );\r\n\r\n            localStorage.setItem( 'user', JSON.stringify( response.data ) );\r\n            setSuccessMessage( 'Login successful! Redirecting to homepage...' );\r\n            setErrorMessage( '' );\r\n            setTimeout( () => {\r\n                navigate( '/homepage' );\r\n            }, 2000 ); // Delay for 2 seconds before redirecting\r\n        } catch ( error ) {\r\n            console.error( \"Login error:\", error );\r\n            setErrorMessage( 'Login unsuccessful. Please check your email and password.' );\r\n            setSuccessMessage( '' );\r\n        }\r\n    };\r\n\r\n    const handleSignup=async () => {\r\n        try {\r\n            console.log( \"Sending signup data:\", {\r\n                name: formData.username,\r\n                email: formData.email,\r\n                password: formData.password\r\n            } );\r\n\r\n            const response=await axiosInstance.post( `${ baseurl }/reg/newUserReg`, {\r\n                name: formData.username,\r\n                email: formData.email,\r\n                password: formData.password\r\n            } );\r\n\r\n            setSuccessMessage( 'Signup successful! Redirecting to login page...' );\r\n            setErrorMessage( '' );\r\n            setTimeout( () => {\r\n                window.location.reload();\r\n                navigate( '/login' );\r\n            }, 2000 );\r\n        } catch ( error ) {\r\n            console.error( \"Signup error:\", error );\r\n            if ( error.response&&error.response.status===409 ) {\r\n                // Check the specific error message from the backend\r\n                if ( error.response.data.message==='Email already in use' ) {\r\n                    setErrorMessage( 'Email already in use. Please use a different email.' );\r\n                } else if ( error.response.data.message==='Username already in use' ) {\r\n                    setErrorMessage( 'Username already in use. Please use a different username.' );\r\n                } else {\r\n                    setErrorMessage( 'Signup unsuccessful. Please try again.' );\r\n                }\r\n            } else {\r\n                setErrorMessage( 'Signup unsuccessful. Please try again.' );\r\n            }\r\n            setSuccessMessage( '' );\r\n        }\r\n    };\r\n\r\n    const handleSubmit=( e ) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior\r\n        setErrorMessage( '' ); // Clear previous error messages\r\n        if ( isLoginMode ) {\r\n            handleLogin();\r\n        } else {\r\n            handleSignup();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"login-container\">\r\n                <div className=\"login-card\">\r\n                    <h1>{isLoginMode? 'Login':'Signup'}</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {!isLoginMode&&(\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"username\"\r\n                                    value={formData.username}\r\n                                    onChange={handleInputChange}\r\n                                    name=\"username\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleInputChange}\r\n                                name=\"email\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleInputChange}\r\n                                name=\"password\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn-submit\">\r\n                            {isLoginMode? 'Login':'Signup'}\r\n                        </button>\r\n                    </form>\r\n                    {successMessage&&<p className=\"success-message\">{successMessage}</p>}\r\n                    {errorMessage&&<p className=\"error-message\">{errorMessage}</p>} {/* Display error message */}\r\n                    <p className=\"toggle-mode\" onClick={() => setIsLoginMode( !isLoginMode )}>\r\n                        {isLoginMode? 'New User? Sign Up':'Already have an account? Login'}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}