{"ast":null,"code":"import React,{useEffect,useState}from'react';import Card from'./Card';import'./Timeline.css';import Navbar from'./Navbar';import'./About.css';import{baseurl}from'../url';import axiosInstance from'../axiosConfig';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const About=()=>{const[posts,setPosts]=useState([]);const[username,setUsername]=useState('');useEffect(()=>{const fetchUserPosts=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/msg/all\"),{withCredentials:true// Ensure credentials are included\n});console.log(response);setUsername(response.data.username);// Check if messagesList exists in response.data and is an array\nif(response.data&&Array.isArray(response.data.messagesList)){setPosts(response.data.messagesList||[]);}else{console.error('Error: messagesList is not an array in response data');}}catch(error){console.error('Error while fetching posts',error);}};fetchUserPosts();},[]);// Empty dependency array ensures useEffect runs only once\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"about-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"h1\",{className:\"about-title\",children:[\"Login: \",username.toUpperCase()]}),/*#__PURE__*/_jsx(\"div\",{className:\"cards-container\",children:posts.map(post=>/*#__PURE__*/_jsx(Card,{username:username.toUpperCase(),// Assuming _id is a unique identifier for each post\nuserPost:post.userPost// Assuming userPost is the main content of the post\n,likes:post.likes,disLikes:post.disLikes,date:post.date},post._id))})]});};export default About;","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axiosInstance","jsx","_jsx","jsxs","_jsxs","About","posts","setPosts","username","setUsername","fetchUserPosts","response","get","concat","withCredentials","console","log","data","Array","isArray","messagesList","error","className","children","toUpperCase","map","post","userPost","likes","disLikes","date","_id"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/About.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Timeline.css';\r\nimport Navbar from './Navbar';\r\nimport './About.css'\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\n\r\nconst About=() => {\r\n    const [posts, setPosts]=useState( [] );\r\n    const [username, setUsername]=useState( '' );\r\n\r\n    useEffect( () => {\r\n        const fetchUserPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/all`, {\r\n                    withCredentials: true // Ensure credentials are included\r\n                } );\r\n                console.log( response );\r\n                setUsername( response.data.username )\r\n\r\n                // Check if messagesList exists in response.data and is an array\r\n                if ( response.data&&Array.isArray( response.data.messagesList ) ) {\r\n                    setPosts( response.data.messagesList||[] );\r\n                } else {\r\n                    console.error( 'Error: messagesList is not an array in response data' );\r\n                }\r\n            } catch ( error ) {\r\n                console.error( 'Error while fetching posts', error );\r\n            }\r\n        };\r\n\r\n        fetchUserPosts();\r\n    }, [] ); // Empty dependency array ensures useEffect runs only once\r\n\r\n    return (\r\n        <div className=\"about-container\">\r\n            <Navbar />\r\n\r\n            <h1 className=\"about-title\">Login: {username.toUpperCase()}</h1>\r\n            <div className=\"cards-container\">\r\n                {posts.map( post => (\r\n                    <Card\r\n                        username={username.toUpperCase()}\r\n                        key={post._id} // Assuming _id is a unique identifier for each post\r\n                        userPost={post.userPost} // Assuming userPost is the main content of the post\r\n                        likes={post.likes}\r\n                        disLikes={post.disLikes}\r\n                        date={post.date}\r\n                    />\r\n                ) )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,gBAAgB,CACvB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,aAAa,CACpB,OAASC,OAAO,KAAQ,QAAQ,CAChC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG3C,KAAM,CAAAC,KAAK,CAACA,CAAA,GAAM,CACd,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAACX,QAAQ,CAAE,EAAG,CAAC,CACtC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAACb,QAAQ,CAAE,EAAG,CAAC,CAE5CD,SAAS,CAAE,IAAM,CACb,KAAM,CAAAe,cAAc,CAAC,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAC,KAAM,CAAAX,aAAa,CAACY,GAAG,IAAAC,MAAA,CAAMd,OAAO,aAAa,CAC5De,eAAe,CAAE,IAAK;AAC1B,CAAE,CAAC,CACHC,OAAO,CAACC,GAAG,CAAEL,QAAS,CAAC,CACvBF,WAAW,CAAEE,QAAQ,CAACM,IAAI,CAACT,QAAS,CAAC,CAErC;AACA,GAAKG,QAAQ,CAACM,IAAI,EAAEC,KAAK,CAACC,OAAO,CAAER,QAAQ,CAACM,IAAI,CAACG,YAAa,CAAC,CAAG,CAC9Db,QAAQ,CAAEI,QAAQ,CAACM,IAAI,CAACG,YAAY,EAAE,EAAG,CAAC,CAC9C,CAAC,IAAM,CACHL,OAAO,CAACM,KAAK,CAAE,sDAAuD,CAAC,CAC3E,CACJ,CAAE,MAAQA,KAAK,CAAG,CACdN,OAAO,CAACM,KAAK,CAAE,4BAA4B,CAAEA,KAAM,CAAC,CACxD,CACJ,CAAC,CAEDX,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,EAAG,CAAC,CAAE;AAET,mBACIN,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BrB,IAAA,CAACJ,MAAM,GAAE,CAAC,cAEVM,KAAA,OAAIkB,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,SAAO,CAACf,QAAQ,CAACgB,WAAW,CAAC,CAAC,EAAK,CAAC,cAChEtB,IAAA,QAAKoB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3BjB,KAAK,CAACmB,GAAG,CAAEC,IAAI,eACZxB,IAAA,CAACL,IAAI,EACDW,QAAQ,CAAEA,QAAQ,CAACgB,WAAW,CAAC,CAAE,CAClB;AACfG,QAAQ,CAAED,IAAI,CAACC,QAAU;AAAA,CACzBC,KAAK,CAAEF,IAAI,CAACE,KAAM,CAClBC,QAAQ,CAAEH,IAAI,CAACG,QAAS,CACxBC,IAAI,CAAEJ,IAAI,CAACI,IAAK,EAJXJ,IAAI,CAACK,GAKb,CACH,CAAC,CACF,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAA1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}