{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nithi\\\\Downloads\\\\NewProjects\\\\react-client\\\\src\\\\Component\\\\About.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Timeline.css';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchUserPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/all`, {\n          withCredentials: true // Ensure credentials are included\n        });\n        console.log(response);\n\n        // Check if response.data is an array\n        if (response.data && Array.isArray(response.data)) {\n          setPosts(response.data);\n        } else {\n          console.error('Error: response data is not an array');\n        }\n      } catch (error) {\n        console.error('Error while fetching posts', error);\n      }\n    };\n    fetchUserPosts();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logged User's Posts Only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), posts.length > 0 ? posts.map(post => post.messagesList && post.messagesList.length > 0 ? post.messagesList.map(message => /*#__PURE__*/_jsxDEV(Card, {\n      username: post.username ? post.username.toUpperCase() : 'Unknown',\n      userPost: message.userPost,\n      likes: message.likes,\n      disLikes: message.disLikes,\n      date: formatDate(message.date)\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No messages found for \", post.username]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axiosInstance","jsxDEV","_jsxDEV","About","_s","posts","setPosts","fetchUserPosts","response","get","withCredentials","console","log","data","Array","isArray","error","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","messagesList","message","username","toUpperCase","userPost","likes","disLikes","date","_id","_c","$RefreshReg$"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/About.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Timeline.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\nconst About=() => {\r\n    const [posts, setPosts]=useState( [] );\r\n\r\n    useEffect( () => {\r\n        const fetchUserPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/all`, {\r\n                    withCredentials: true // Ensure credentials are included\r\n                } );\r\n                console.log( response );\r\n\r\n                // Check if response.data is an array\r\n                if ( response.data&&Array.isArray( response.data ) ) {\r\n                    setPosts( response.data );\r\n                } else {\r\n                    console.error( 'Error: response data is not an array' );\r\n                }\r\n            } catch ( error ) {\r\n                console.error( 'Error while fetching posts', error );\r\n            }\r\n        };\r\n\r\n        fetchUserPosts();\r\n    }, [] ); // Empty dependency array ensures useEffect runs only once\r\n\r\n    const formatDate=( dateString ) => {\r\n        const options={ year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date( dateString ).toLocaleDateString( undefined, options );\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <Navbar />\r\n            <h2>Logged User's Posts Only</h2>\r\n            {posts.length>0? (\r\n                posts.map( post => (\r\n                    post.messagesList&&post.messagesList.length>0? (\r\n                        post.messagesList.map( message => (\r\n                            <Card\r\n                                key={message._id}\r\n                                username={post.username? post.username.toUpperCase():'Unknown'}\r\n                                userPost={message.userPost}\r\n                                likes={message.likes}\r\n                                disLikes={message.disLikes}\r\n                                date={formatDate( message.date )}\r\n                            />\r\n                        ) )\r\n                    ):(\r\n                        <div key={post._id}>No messages found for {post.username}</div>\r\n                    )\r\n                ) )\r\n            ):(\r\n                <div>No posts found</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}