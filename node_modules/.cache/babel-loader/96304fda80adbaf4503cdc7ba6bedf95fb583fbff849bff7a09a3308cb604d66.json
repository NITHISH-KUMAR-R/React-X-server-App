{"ast":null,"code":"import React,{useEffect,useState}from'react';import Card from'./Card';import'./Timeline.css';import Navbar from'./Navbar';import{baseurl}from'../url';import axiosInstance from'../axiosConfig';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const About=()=>{const[posts,setPosts]=useState([]);useEffect(()=>{const fetchUserPosts=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/msg/all\"),{withCredentials:true// Ensure credentials are included\n});console.log(response);// Check if messagesList exists in response.data and is an array\nif(response.data&&Array.isArray(response.data.messagesList)){setPosts(response.data.messagesList||[]);}else{console.error('Error: messagesList is not an array in response data');}}catch(error){console.error('Error while fetching posts',error);}};fetchUserPosts();},[]);// Empty dependency array ensures useEffect runs only once\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Logged User's Posts Only\"}),posts.map(post=>/*#__PURE__*/_jsx(Card,{// Assuming _id is a unique identifier for each post\nuserPost:post.userPost// Assuming userPost is the main content of the post\n,likes:post.likes,disLikes:post.disLikes,date:post.date},post._id))]});};export default About;","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axiosInstance","jsx","_jsx","jsxs","_jsxs","About","posts","setPosts","fetchUserPosts","response","get","concat","withCredentials","console","log","data","Array","isArray","messagesList","error","className","children","map","post","userPost","likes","disLikes","date","_id"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/About.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Timeline.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\nconst About=() => {\r\n    const [posts, setPosts]=useState( [] );\r\n\r\n    useEffect( () => {\r\n        const fetchUserPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/all`, {\r\n                    withCredentials: true // Ensure credentials are included\r\n                } );\r\n                console.log( response );\r\n\r\n                // Check if messagesList exists in response.data and is an array\r\n                if ( response.data&&Array.isArray( response.data.messagesList ) ) {\r\n                    setPosts( response.data.messagesList||[] );\r\n                } else {\r\n                    console.error( 'Error: messagesList is not an array in response data' );\r\n                }\r\n            } catch ( error ) {\r\n                console.error( 'Error while fetching posts', error );\r\n            }\r\n        };\r\n\r\n        fetchUserPosts();\r\n    }, [] ); // Empty dependency array ensures useEffect runs only once\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <Navbar />\r\n            <h2>Logged User's Posts Only</h2>\r\n            {posts.map( post => (\r\n                <Card\r\n                    key={post._id} // Assuming _id is a unique identifier for each post\r\n                    userPost={post.userPost} // Assuming userPost is the main content of the post\r\n                    likes={post.likes}\r\n                    disLikes={post.disLikes}\r\n                    date={post.date}\r\n                />\r\n            ) )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,gBAAgB,CACvB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OAASC,OAAO,KAAQ,QAAQ,CAChC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,KAAK,CAACA,CAAA,GAAM,CACd,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAACX,QAAQ,CAAE,EAAG,CAAC,CAEtCD,SAAS,CAAE,IAAM,CACb,KAAM,CAAAa,cAAc,CAAC,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAC,KAAM,CAAAT,aAAa,CAACU,GAAG,IAAAC,MAAA,CAAMZ,OAAO,aAAa,CAC5Da,eAAe,CAAE,IAAK;AAC1B,CAAE,CAAC,CACHC,OAAO,CAACC,GAAG,CAAEL,QAAS,CAAC,CAEvB;AACA,GAAKA,QAAQ,CAACM,IAAI,EAAEC,KAAK,CAACC,OAAO,CAAER,QAAQ,CAACM,IAAI,CAACG,YAAa,CAAC,CAAG,CAC9DX,QAAQ,CAAEE,QAAQ,CAACM,IAAI,CAACG,YAAY,EAAE,EAAG,CAAC,CAC9C,CAAC,IAAM,CACHL,OAAO,CAACM,KAAK,CAAE,sDAAuD,CAAC,CAC3E,CACJ,CAAE,MAAQA,KAAK,CAAG,CACdN,OAAO,CAACM,KAAK,CAAE,4BAA4B,CAAEA,KAAM,CAAC,CACxD,CACJ,CAAC,CAEDX,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,EAAG,CAAC,CAAE;AAET,mBACIJ,KAAA,QAAKgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BnB,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVI,IAAA,OAAAmB,QAAA,CAAI,0BAAwB,CAAI,CAAC,CAChCf,KAAK,CAACgB,GAAG,CAAEC,IAAI,eACZrB,IAAA,CAACL,IAAI,EACc;AACf2B,QAAQ,CAAED,IAAI,CAACC,QAAU;AAAA,CACzBC,KAAK,CAAEF,IAAI,CAACE,KAAM,CAClBC,QAAQ,CAAEH,IAAI,CAACG,QAAS,CACxBC,IAAI,CAAEJ,IAAI,CAACI,IAAK,EAJXJ,IAAI,CAACK,GAKb,CACH,CAAC,EACF,CAAC,CAEd,CAAC,CAED,cAAe,CAAAvB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}