{"ast":null,"code":"var _jsxFileName = \"D:\\\\May2024\\\\my-app\\\\src\\\\Login\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  // const [userName, setUserName]=useState( '' );\n  // const [password, setPassword]=useState( '' );\n\n  const [formData, SetFromData] = useState({\n    userName: '',\n    password: ''\n  });\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    SetFromData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLoginMode ? 'Login' : 'SignUp'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"UserName:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: formData.userName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        text: \"Submit\",\n        children: isLoginMode ? 'Login' : 'SignUp'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsLoginMode(!isLoginMode),\n      children: isLoginMode ? 'New User' : 'Account Already Exist'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"3AoNInnKenOOAzosdFMCF3EhSWY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Login","_s","isLoginMode","setIsLoginMode","formData","SetFromData","userName","password","handleInputChange","e","name","value","target","prevState","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","htmlFor","type","id","onChange","required","text","onClick","_c","$RefreshReg$"],"sources":["D:/May2024/my-app/src/Login/login.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\n\r\n\r\nconst Login=() => {\r\n    const [isLoginMode, setIsLoginMode]=useState( true )\r\n    // const [userName, setUserName]=useState( '' );\r\n    // const [password, setPassword]=useState( '' );\r\n\r\n    const [formData, SetFromData]=useState( {\r\n        userName: '',\r\n        password: ''\r\n    } )\r\n\r\n    const handleInputChange=useCallback( ( e ) => {\r\n        const { name, value }=e.target;\r\n        SetFromData( prevState => ( { ...prevState, [name]: value } ) )\r\n\r\n    }, [] )\r\n    const handleSubmit=( e ) => {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h1>{isLoginMode? 'Login':'SignUp'}</h1>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"username-container\">\r\n                    <label htmlFor=\"username\">UserName:</label>\r\n                    <input type=\"text\" id=\"username\" value={formData.userName} onChange={handleInputChange} required />\r\n\r\n                </div>\r\n                <div className=\"password-container\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"text\" id=\"password\" value={formData.password} onChange={handleInputChange} required />\r\n\r\n                </div>\r\n\r\n                <button text='Submit'>{isLoginMode? 'Login':'SignUp'}</button>\r\n\r\n            </form>\r\n            <p onClick={() => setIsLoginMode( !isLoginMode )}>{isLoginMode? 'New User':'Account Already Exist'}</p>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}