{"ast":null,"code":"var _jsxFileName = \"D:\\\\May2024-projects\\\\react-client\\\\src\\\\Component\\\\Friend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Friend.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendComponent = () => {\n  _s();\n  const [allUsers, setAllUsers] = useState([]);\n  const [friendList, setFriendList] = useState(new Set());\n  const [pendingRequests, setPendingRequests] = useState(new Set());\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/all', {\n          withCredentials: true\n        });\n        setAllUsers(response.data);\n        // Fetch current user's friend list\n        const friendsResponse = await axios.get('http://localhost:5000/friend/fetchid', {\n          withCredentials: true\n        });\n        const friendsIds = friendsResponse.data.map(friend => friend.userid);\n        setFriendList(new Set(friendsIds));\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const handleSendRequest = async userId => {\n    if (pendingRequests.has(userId) || friendList.has(userId)) {\n      return; // Prevent duplicate requests or already friends\n    }\n    try {\n      setPendingRequests(prevPendingRequests => new Set(prevPendingRequests).add(userId));\n      const response = await axios.post(`http://localhost:5000/friend/req/${userId}`, null, {\n        withCredentials: true\n      });\n      console.log(response.data);\n      // Handle success, update UI if needed\n      setTimeout(() => {\n        setPendingRequests(prevPendingRequests => {\n          const newPendingRequests = new Set(prevPendingRequests);\n          newPendingRequests.delete(userId);\n          return newPendingRequests;\n        });\n      }, 2000); // Remove pending state after 2 seconds\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n      setPendingRequests(prevPendingRequests => {\n        const newPendingRequests = new Set(prevPendingRequests);\n        newPendingRequests.delete(userId);\n        return newPendingRequests;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: capitalizeFirstLetter(user.username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `send-request-btn ${friendList.has(user._id) ? 'already-friend' : pendingRequests.has(user._id) ? 'pending' : ''}`,\n          onClick: () => handleSendRequest(user._id),\n          disabled: pendingRequests.has(user._id) || friendList.has(user._id),\n          children: friendList.has(user._id) ? 'Already Friend' : pendingRequests.has(user._id) ? 'Pending' : 'Send Request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendComponent, \"MuWYemQVnyx2KUP3kHJzBsnulK0=\");\n_c = FriendComponent;\nexport default FriendComponent;\nvar _c;\n$RefreshReg$(_c, \"FriendComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FriendComponent","_s","allUsers","setAllUsers","friendList","setFriendList","Set","pendingRequests","setPendingRequests","fetchAllUsers","response","get","withCredentials","data","friendsResponse","friendsIds","map","friend","userid","error","console","capitalizeFirstLetter","string","charAt","toUpperCase","slice","handleSendRequest","userId","has","prevPendingRequests","add","post","log","setTimeout","newPendingRequests","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user","username","_id","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/May2024-projects/react-client/src/Component/Friend.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Friend.css';\r\n\r\nconst FriendComponent=() => {\r\n    const [allUsers, setAllUsers]=useState( [] );\r\n    const [friendList, setFriendList]=useState( new Set() );\r\n    const [pendingRequests, setPendingRequests]=useState( new Set() );\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/all', { withCredentials: true } );\r\n                setAllUsers( response.data );\r\n                // Fetch current user's friend list\r\n                const friendsResponse=await axios.get( 'http://localhost:5000/friend/fetchid', { withCredentials: true } );\r\n                const friendsIds=friendsResponse.data.map( friend => friend.userid );\r\n                setFriendList( new Set( friendsIds ) );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching users:', error );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n    }, [] );\r\n\r\n    const capitalizeFirstLetter=( string ) => {\r\n        return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\r\n    };\r\n\r\n    const handleSendRequest=async ( userId ) => {\r\n        if ( pendingRequests.has( userId )||friendList.has( userId ) ) {\r\n            return; // Prevent duplicate requests or already friends\r\n        }\r\n\r\n        try {\r\n            setPendingRequests( ( prevPendingRequests ) => new Set( prevPendingRequests ).add( userId ) );\r\n            const response=await axios.post( `http://localhost:5000/friend/req/${ userId }`, null, { withCredentials: true } );\r\n            console.log( response.data );\r\n            // Handle success, update UI if needed\r\n            setTimeout( () => {\r\n                setPendingRequests( ( prevPendingRequests ) => {\r\n                    const newPendingRequests=new Set( prevPendingRequests );\r\n                    newPendingRequests.delete( userId );\r\n                    return newPendingRequests;\r\n                } );\r\n            }, 2000 ); // Remove pending state after 2 seconds\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n            setPendingRequests( ( prevPendingRequests ) => {\r\n                const newPendingRequests=new Set( prevPendingRequests );\r\n                newPendingRequests.delete( userId );\r\n                return newPendingRequests;\r\n            } );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"friend-container\">\r\n            <h1>All Users</h1>\r\n            <div className=\"user-list\">\r\n                {allUsers.map( ( user ) => (\r\n                    <div key={user._id} className=\"user-card\">\r\n                        <h2>{capitalizeFirstLetter( user.username )}</h2>\r\n                        <button\r\n                            className={`send-request-btn ${ friendList.has( user._id )? 'already-friend':( pendingRequests.has( user._id )? 'pending':'' ) }`}\r\n                            onClick={() => handleSendRequest( user._id )}\r\n                            disabled={pendingRequests.has( user._id )||friendList.has( user._id )}\r\n                        >\r\n                            {friendList.has( user._id )? 'Already Friend':( pendingRequests.has( user._id )? 'Pending':'Send Request' )}\r\n                        </button>\r\n                    </div>\r\n                ) )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}