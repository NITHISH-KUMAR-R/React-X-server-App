{"ast":null,"code":"var _jsxFileName = \"D:\\\\May2024-projects\\\\react-client\\\\src\\\\Component\\\\Friend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendComponent = () => {\n  _s();\n  const [allUsers, setAllUsers] = useState([]);\n  const [allFriends, setAllFriends] = useState([]);\n  const [pendingRequests, setPendingRequests] = useState([]);\n\n  // Fetch all users\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/all', {\n          withCredentials: true\n        });\n        setAllUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n\n  // Fetch all friends and pending requests\n  useEffect(() => {\n    const fetchAllFriendsAndRequests = async () => {\n      try {\n        const friendsResponse = await axios.get('http://localhost:5000/friend/all', {\n          withCredentials: true\n        });\n        const pendingResponse = await axios.get('http://localhost:5000/friend/pending', {\n          withCredentials: true\n        });\n        setAllFriends(friendsResponse.data.friends);\n        setPendingRequests(pendingResponse.data.requests);\n      } catch (error) {\n        console.error('Error fetching friends or pending requests:', error);\n      }\n    };\n    fetchAllFriendsAndRequests();\n  }, []);\n\n  // Function to send friend request\n  const handleSendRequest = async userId => {\n    try {\n      const response = await axios.post(`http://localhost:5000/friend/req/${userId}`, null, {\n        withCredentials: true\n      });\n      console.log('Friend request sent:', response.data);\n      // You may update state or UI as needed after sending the request\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n\n  // Function to accept pending friend request\n  const handleAcceptRequest = async requestId => {\n    try {\n      const response = await axios.put(`http://localhost:5000/friend/accept/${requestId}`, null, {\n        withCredentials: true\n      });\n      console.log('Friend request accepted:', response.data);\n      // You may update state or UI as needed after accepting the request\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n\n  // Function to check if a user is already a friend\n  const isFriend = userId => {\n    return allFriends.some(friend => friend._id === userId);\n  };\n\n  // Function to check if a user has pending request\n  const isPendingRequest = userId => {\n    return pendingRequests.some(request => request.sender === userId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friend Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.username, !isFriend(user._id) && !isPendingRequest(user._id) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendRequest(user._id),\n            children: \"Send Friend Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), isPendingRequest(user._id) && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Request Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 60\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allFriends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: friend.username\n        }, friend._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pending-requests\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pending Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pendingRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [request.senderUsername, !isFriend(request.sender) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAcceptRequest(request._id),\n            children: \"Accept Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, request._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendComponent, \"6ehPoeosQPsmOJod1BrbY9cbuUw=\");\n_c = FriendComponent;\nexport default FriendComponent;\nvar _c;\n$RefreshReg$(_c, \"FriendComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FriendComponent","_s","allUsers","setAllUsers","allFriends","setAllFriends","pendingRequests","setPendingRequests","fetchAllUsers","response","get","withCredentials","data","error","console","fetchAllFriendsAndRequests","friendsResponse","pendingResponse","friends","requests","handleSendRequest","userId","post","log","handleAcceptRequest","requestId","put","isFriend","some","friend","_id","isPendingRequest","request","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","onClick","senderUsername","_c","$RefreshReg$"],"sources":["D:/May2024-projects/react-client/src/Component/Friend.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FriendComponent=() => {\r\n    const [allUsers, setAllUsers]=useState( [] );\r\n    const [allFriends, setAllFriends]=useState( [] );\r\n    const [pendingRequests, setPendingRequests]=useState( [] );\r\n\r\n    // Fetch all users\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/all', { withCredentials: true } );\r\n                setAllUsers( response.data );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching users:', error );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n    }, [] );\r\n\r\n    // Fetch all friends and pending requests\r\n    useEffect( () => {\r\n        const fetchAllFriendsAndRequests=async () => {\r\n            try {\r\n                const friendsResponse=await axios.get( 'http://localhost:5000/friend/all', { withCredentials: true } );\r\n                const pendingResponse=await axios.get( 'http://localhost:5000/friend/pending', { withCredentials: true } );\r\n\r\n                setAllFriends( friendsResponse.data.friends );\r\n                setPendingRequests( pendingResponse.data.requests );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching friends or pending requests:', error );\r\n            }\r\n        };\r\n\r\n        fetchAllFriendsAndRequests();\r\n    }, [] );\r\n\r\n    // Function to send friend request\r\n    const handleSendRequest=async ( userId ) => {\r\n        try {\r\n            const response=await axios.post( `http://localhost:5000/friend/req/${ userId }`, null, { withCredentials: true } );\r\n            console.log( 'Friend request sent:', response.data );\r\n            // You may update state or UI as needed after sending the request\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n        }\r\n    };\r\n\r\n    // Function to accept pending friend request\r\n    const handleAcceptRequest=async ( requestId ) => {\r\n        try {\r\n            const response=await axios.put( `http://localhost:5000/friend/accept/${ requestId }`, null, { withCredentials: true } );\r\n            console.log( 'Friend request accepted:', response.data );\r\n            // You may update state or UI as needed after accepting the request\r\n        } catch ( error ) {\r\n            console.error( 'Error accepting friend request:', error );\r\n        }\r\n    };\r\n\r\n    // Function to check if a user is already a friend\r\n    const isFriend=( userId ) => {\r\n        return allFriends.some( ( friend ) => friend._id===userId );\r\n    };\r\n\r\n    // Function to check if a user has pending request\r\n    const isPendingRequest=( userId ) => {\r\n        return pendingRequests.some( ( request ) => request.sender===userId );\r\n    };\r\n\r\n    return (\r\n        <div className=\"friend-container\">\r\n            <h1>Friend Management</h1>\r\n\r\n            <div className=\"all-users\">\r\n                <h2>All Users</h2>\r\n                <ul>\r\n                    {allUsers.map( ( user ) => (\r\n                        <li key={user._id}>\r\n                            {user.username}\r\n                            {!isFriend( user._id )&&!isPendingRequest( user._id )&&(\r\n                                <button onClick={() => handleSendRequest( user._id )}>Send Friend Request</button>\r\n                            )}\r\n                            {isPendingRequest( user._id )&&<span>Request Pending</span>}\r\n                        </li>\r\n                    ) )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"friends-list\">\r\n                <h2>Friends</h2>\r\n                <ul>\r\n                    {allFriends.map( ( friend ) => (\r\n                        <li key={friend._id}>\r\n                            {friend.username}\r\n                        </li>\r\n                    ) )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"pending-requests\">\r\n                <h2>Pending Requests</h2>\r\n                <ul>\r\n                    {pendingRequests.map( ( request ) => (\r\n                        <li key={request._id}>\r\n                            {request.senderUsername}\r\n                            {!isFriend( request.sender )&&(\r\n                                <button onClick={() => handleAcceptRequest( request._id )}>Accept Request</button>\r\n                            )}\r\n                        </li>\r\n                    ) )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}