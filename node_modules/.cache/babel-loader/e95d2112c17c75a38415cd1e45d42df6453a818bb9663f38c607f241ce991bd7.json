{"ast":null,"code":"import React,{useEffect,useState}from'react';import{baseurl}from'../url';import axiosInstance from'../axiosConfig';import'./Friend3.css';import Navbar from'./Navbar';// Import Navbar component\nimport FriendsNavbar from'./FriendsNavbar';import Loading from'./Loading';// Import the Loading component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Friend3=()=>{const[allUsers,setAllUsers]=useState([]);const[sentRequests,setSentRequests]=useState(new Set());const[receivedRequests,setReceivedRequests]=useState([]);const[loading,setLoading]=useState(true);// Loading state\nuseEffect(()=>{const fetchAllUsers=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/friend/unkownuser\"),{withCredentials:true});const allUserData=response.data;setAllUsers(allUserData);setLoading(false);// Data fetched successfully, stop loading\n}catch(error){console.error('Error fetching all users:',error);setLoading(false);// Stop loading on error\n}};const fetchPendingRequests=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/friend/pendingReq\"),{withCredentials:true});const{sentRequests,receivedRequests}=response.data;setSentRequests(new Set(sentRequests.map(request=>request.receiver._id)));setReceivedRequests(receivedRequests);}catch(error){console.error('Error fetching pending requests:',error);}};fetchAllUsers();fetchPendingRequests();},[]);const sendFriendRequest=async userId=>{try{await axiosInstance.post(\"\".concat(baseurl,\"/friend/req/\").concat(userId),{},{withCredentials:true});setSentRequests(prevSentRequests=>new Set([...prevSentRequests,userId]));}catch(error){console.error('Error sending friend request:',error);}};const capitalizeFirstLetter=string=>{return string.charAt(0).toUpperCase()+string.slice(1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(FriendsNavbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container-friend3\",children:loading?/*#__PURE__*/_jsx(Loading,{}):allUsers.length>0?allUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{children:[capitalizeFirstLetter(user.username),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendFriendRequest(user._id),className:\"button\",disabled:sentRequests.has(user._id)||receivedRequests.some(request=>request.sender._id===user._id),children:sentRequests.has(user._id)?'Request Sent':receivedRequests.some(request=>request.sender._id===user._id)?'Request Received':'Send Request'})]},user._id)):/*#__PURE__*/_jsx(\"div\",{children:\"No users found\"})})]});};export default Friend3;","map":{"version":3,"names":["React","useEffect","useState","baseurl","axiosInstance","Navbar","FriendsNavbar","Loading","jsx","_jsx","jsxs","_jsxs","Friend3","allUsers","setAllUsers","sentRequests","setSentRequests","Set","receivedRequests","setReceivedRequests","loading","setLoading","fetchAllUsers","response","get","concat","withCredentials","allUserData","data","error","console","fetchPendingRequests","map","request","receiver","_id","sendFriendRequest","userId","post","prevSentRequests","capitalizeFirstLetter","string","charAt","toUpperCase","slice","children","className","length","user","username","onClick","disabled","has","some","sender"],"sources":["D:/Hello/NewProjects/react-client/src/Component/Friend3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\nimport './Friend3.css';\r\n\r\nimport Navbar from './Navbar'; // Import Navbar component\r\nimport FriendsNavbar from './FriendsNavbar';\r\nimport Loading from './Loading'; // Import the Loading component\r\n\r\nconst Friend3=() => {\r\n    const [allUsers, setAllUsers]=useState( [] );\r\n    const [sentRequests, setSentRequests]=useState( new Set() );\r\n    const [receivedRequests, setReceivedRequests]=useState( [] );\r\n    const [loading, setLoading]=useState( true ); // Loading state\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\r\n                    withCredentials: true,\r\n                } );\r\n                const allUserData=response.data;\r\n                setAllUsers( allUserData );\r\n                setLoading( false ); // Data fetched successfully, stop loading\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching all users:', error );\r\n                setLoading( false ); // Stop loading on error\r\n            }\r\n        };\r\n\r\n        const fetchPendingRequests=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/pendingReq`, {\r\n                    withCredentials: true,\r\n                } );\r\n                const { sentRequests, receivedRequests }=response.data;\r\n\r\n                setSentRequests( new Set( sentRequests.map( request => request.receiver._id ) ) );\r\n                setReceivedRequests( receivedRequests );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching pending requests:', error );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n        fetchPendingRequests();\r\n    }, [] );\r\n\r\n    const sendFriendRequest=async ( userId ) => {\r\n        try {\r\n            await axiosInstance.post(\r\n                `${ baseurl }/friend/req/${ userId }`,\r\n                {},\r\n                { withCredentials: true }\r\n            );\r\n\r\n            setSentRequests( prevSentRequests => new Set( [...prevSentRequests, userId] ) );\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n        }\r\n    };\r\n\r\n    const capitalizeFirstLetter=( string ) => {\r\n        return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <FriendsNavbar />\r\n\r\n            <div className='container-friend3'>\r\n                {loading? <Loading />:\r\n                    allUsers.length>0? (\r\n                        allUsers.map( user => (\r\n                            <li key={user._id}>\r\n                                {capitalizeFirstLetter( user.username )}\r\n                                <button\r\n                                    onClick={() => sendFriendRequest( user._id )}\r\n                                    className='button'\r\n                                    disabled={sentRequests.has( user._id )||receivedRequests.some( request => request.sender._id===user._id )}\r\n                                >\r\n                                    {sentRequests.has( user._id )? 'Request Sent':\r\n                                        ( receivedRequests.some( request => request.sender._id===user._id )? 'Request Received':'Send Request' )}\r\n                                </button>\r\n                            </li>\r\n                        ) )\r\n                    ):(\r\n                        <div>No users found</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}