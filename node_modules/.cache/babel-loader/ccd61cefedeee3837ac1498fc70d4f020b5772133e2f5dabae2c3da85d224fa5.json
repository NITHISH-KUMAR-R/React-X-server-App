{"ast":null,"code":"var _jsxFileName = \"D:\\\\May2024-projects\\\\react-client\\\\src\\\\Component\\\\Friend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Friend.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendComponent = () => {\n  _s();\n  const [session, setSession] = useState(null); // Use null for initial state\n  const [allUsers, setAllUsers] = useState([]); // To store all users\n  const [sentRequests, setSentRequests] = useState(new Set()); // To track sent friend requests\n  const [loading, setLoading] = useState(true); // To manage loading state\n\n  useEffect(() => {\n    const fetchLoginUserId = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/session', {\n          withCredentials: true // Include credentials in the request\n        });\n        const data = response.data;\n        console.log(data);\n        setSession(data);\n      } catch (error) {\n        console.error('Error fetching session data:', error);\n      }\n    };\n    fetchLoginUserId();\n  }, []);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/all', {\n          withCredentials: true // Include credentials in the request\n        });\n        const allUserData = response.data;\n        console.log(allUserData);\n        setAllUsers(allUserData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching all users:', error);\n        setLoading(false);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n  const sendFriendRequest = async userId => {\n    try {\n      if (session) {\n        const response = await axios.post(`http://localhost:5000/friend/req/${userId}`, {}, {\n          withCredentials: true // Include credentials in the request\n        });\n        console.log('Friend request sent:', response.data);\n        setSentRequests(prev => new Set(prev).add(userId));\n      } else {\n        console.error('User session not found');\n      }\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend-container\",\n    children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", session.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", session.Userid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading session...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" (\", user.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendFriendRequest(user._id),\n          disabled: sentRequests.has(user._id),\n          children: sentRequests.has(user._id) ? 'Request Sent' : 'Send Friend Request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendComponent, \"YqPWUrzOrl8COeQNSp/VxX6ov2I=\");\n_c = FriendComponent;\nexport default FriendComponent;\nvar _c;\n$RefreshReg$(_c, \"FriendComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FriendComponent","_s","session","setSession","allUsers","setAllUsers","sentRequests","setSentRequests","Set","loading","setLoading","fetchLoginUserId","response","get","withCredentials","data","console","log","error","fetchAllUsers","allUserData","sendFriendRequest","userId","post","prev","add","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","Userid","map","user","email","onClick","_id","disabled","has","_c","$RefreshReg$"],"sources":["D:/May2024-projects/react-client/src/Component/Friend.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Friend.css';\r\n\r\nconst FriendComponent=() => {\r\n    const [session, setSession]=useState( null ); // Use null for initial state\r\n    const [allUsers, setAllUsers]=useState( [] ); // To store all users\r\n    const [sentRequests, setSentRequests]=useState( new Set() ); // To track sent friend requests\r\n    const [loading, setLoading]=useState( true ); // To manage loading state\r\n\r\n    useEffect( () => {\r\n        const fetchLoginUserId=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/session', {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                const data=response.data;\r\n                console.log( data );\r\n                setSession( data );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching session data:', error );\r\n            }\r\n        };\r\n\r\n        fetchLoginUserId();\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/all', {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                const allUserData=response.data;\r\n                console.log( allUserData );\r\n                setAllUsers( allUserData );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching all users:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n    }, [] );\r\n\r\n    const sendFriendRequest=async ( userId ) => {\r\n        try {\r\n            if ( session ) {\r\n                const response=await axios.post( `http://localhost:5000/friend/req/${ userId }`, {}, {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                console.log( 'Friend request sent:', response.data );\r\n                setSentRequests( ( prev ) => new Set( prev ).add( userId ) );\r\n            } else {\r\n                console.error( 'User session not found' );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n        }\r\n    };\r\n\r\n    if ( loading ) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"friend-container\">\r\n            {session? (\r\n                <div>\r\n                    <h1>Welcome, {session.name}</h1>\r\n                    <p>User ID: {session.Userid}</p>\r\n                </div>\r\n            ):(\r\n                <p>Loading session...</p>\r\n            )}\r\n            <h2>All Users</h2>\r\n            <ul>\r\n                {allUsers.map( user => (\r\n                    <li key={user._id}>\r\n                        {user.name} ({user.email})\r\n                        <button\r\n                            onClick={() => sendFriendRequest( user._id )}\r\n                            disabled={sentRequests.has( user._id )}\r\n                        >\r\n                            {sentRequests.has( user._id )? 'Request Sent':'Send Friend Request'}\r\n                        </button>\r\n                    </li>\r\n                ) )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}