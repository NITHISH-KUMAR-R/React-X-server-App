{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_jsProject\\\\react-client\\\\src\\\\Component\\\\FriendsPostonly.jsx\",\n  _s = $RefreshSig$();\n// src/Component/FriendPosts.js\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Card.css';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axios from 'axios';\nimport axiosInstance from '../axiosConfig';\n// import './LoadingSpinner.css'; // Import your loading spinner CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst FriendPosts = () => {\n  _s();\n  const [friendPosts, setFriendPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFriendPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/displayFrndPost`, {\n          withCredentials: true\n        });\n        setFriendPosts(response.data.friendPosts || []);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching friend posts:', error);\n        setLoading(false);\n      }\n    };\n    fetchFriendPosts();\n  }, []);\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friend posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length > 0 && friendPosts.map(post => post.messagesList.map(message => /*#__PURE__*/_jsxDEV(Card, {\n      username: post.username.toUpperCase(),\n      userPost: message.userPost,\n      likes: message.likes,\n      disLikes: message.disLikes,\n      date: formatDate(message.date)\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendPosts, \"+24iiFbqDOWH1RRoR/WfnIgTkt0=\");\n_c = FriendPosts;\nexport default FriendPosts;\nvar _c;\n$RefreshReg$(_c, \"FriendPosts\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axios","axiosInstance","jsxDEV","_jsxDEV","defaults","withCredentials","FriendPosts","_s","friendPosts","setFriendPosts","loading","setLoading","fetchFriendPosts","response","get","data","error","console","formatDate","dateString","options","year","month","day","date","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","messagesList","message","username","toUpperCase","userPost","likes","disLikes","_id","_c","$RefreshReg$"],"sources":["D:/Node_jsProject/react-client/src/Component/FriendsPostonly.jsx"],"sourcesContent":["// src/Component/FriendPosts.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Card.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axios from 'axios';\r\nimport axiosInstance from '../axiosConfig';\r\n// import './LoadingSpinner.css'; // Import your loading spinner CSS file\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\nconst FriendPosts=() => {\r\n    const [friendPosts, setFriendPosts]=useState( [] );\r\n    const [loading, setLoading]=useState( true );\r\n\r\n    useEffect( () => {\r\n        const fetchFriendPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/displayFrndPost`, {\r\n                    withCredentials: true\r\n                } );\r\n                setFriendPosts( response.data.friendPosts||[] );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching friend posts:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchFriendPosts();\r\n    }, [] );\r\n\r\n    const formatDate=( dateString ) => {\r\n        const options={ year: 'numeric', month: 'long', day: 'numeric' };\r\n        const date=new Date( dateString );\r\n        return date.toLocaleDateString( undefined, options );\r\n    };\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <Navbar />\r\n\r\n            {loading&&(\r\n                <div className=\"loading-spinner\"></div>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length===0&&(\r\n                <p>No friend posts available.</p>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length>0&&(\r\n                friendPosts.map( post => (\r\n                    post.messagesList.map( message => (\r\n                        <Card\r\n                            key={message._id}\r\n                            username={post.username.toUpperCase()}\r\n                            userPost={message.userPost}\r\n                            likes={message.likes}\r\n                            disLikes={message.disLikes}\r\n                            date={formatDate( message.date )}\r\n                        />\r\n                    ) )\r\n                ) )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}