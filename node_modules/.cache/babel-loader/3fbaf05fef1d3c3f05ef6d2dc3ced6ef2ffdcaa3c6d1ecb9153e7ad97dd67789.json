{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_jsProject\\\\react-client\\\\src\\\\Component\\\\Timeline.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Timeline.css';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst Timeline = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/allUserspost`, {\n          withCredentials: true\n        });\n        setPosts(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error while fetching posts', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const likePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/likes/${postId}`);\n      console.log(`Liked post with ID: ${postId}`, response);\n      if (response.status === 200) {\n        const updatedPost = response.data.post;\n        setPosts(prevPosts => prevPosts.map(post => post.messagesList.map(message => message._id === postId ? {\n          ...message,\n          likes: updatedPost.likes\n        } : message)));\n      }\n    } catch (error) {\n      console.error(`Error liking post with ID: ${postId}`, error);\n    }\n  };\n  const dislikePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/dislike/${postId}`);\n      console.log(`Disliked post with ID: ${postId}`, response);\n      if (response.status === 200) {\n        const updatedPost = response.data.post;\n        setPosts(prevPosts => prevPosts.map(post => post.messagesList.map(message => message._id === postId ? {\n          ...message,\n          disLikes: updatedPost.disLikes\n        } : message)));\n      }\n    } catch (error) {\n      console.error(`Error disliking post with ID: ${postId}`, error);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), posts.map(post => post.messagesList.map(message => /*#__PURE__*/_jsxDEV(Card, {\n      username: post.username.toUpperCase(),\n      userPost: message.userPost,\n      likes: message.likes,\n      disLikes: message.disLikes,\n      date: formatDate(message.date),\n      onLike: () => likePost(message._id),\n      onDislike: () => dislikePost(message._id)\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Timeline, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useEffect","useState","Card","axios","Navbar","baseurl","axiosInstance","jsxDEV","_jsxDEV","defaults","withCredentials","Timeline","_s","posts","setPosts","fetchPosts","response","get","data","console","log","error","likePost","postId","post","status","updatedPost","prevPosts","map","messagesList","message","_id","likes","dislikePost","disLikes","formatDate","dateString","options","year","month","day","date","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","toUpperCase","userPost","onLike","onDislike","_c","$RefreshReg$"],"sources":["D:/Node_jsProject/react-client/src/Component/Timeline.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Timeline.css';\r\nimport axios from 'axios';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\nconst Timeline=() => {\r\n    const [posts, setPosts]=useState( [] );\r\n\r\n    useEffect( () => {\r\n        const fetchPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/allUserspost`, {\r\n                    withCredentials: true\r\n                } );\r\n                setPosts( response.data );\r\n                console.log( response.data );\r\n            } catch ( error ) {\r\n                console.error( 'Error while fetching posts', error );\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [] );\r\n\r\n    const likePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/likes/${ postId }` );\r\n            console.log( `Liked post with ID: ${ postId }`, response );\r\n\r\n            if ( response.status===200 ) {\r\n                const updatedPost=response.data.post;\r\n                setPosts( ( prevPosts ) =>\r\n                    prevPosts.map( ( post ) =>\r\n                        post.messagesList.map( ( message ) =>\r\n                            message._id===postId\r\n                                ? { ...message, likes: updatedPost.likes }\r\n                                :message\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( `Error liking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const dislikePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/dislike/${ postId }` );\r\n            console.log( `Disliked post with ID: ${ postId }`, response );\r\n\r\n            if ( response.status===200 ) {\r\n                const updatedPost=response.data.post;\r\n                setPosts( ( prevPosts ) =>\r\n                    prevPosts.map( ( post ) =>\r\n                        post.messagesList.map( ( message ) =>\r\n                            message._id===postId\r\n                                ? { ...message, disLikes: updatedPost.disLikes }\r\n                                :message\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( `Error disliking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const formatDate=( dateString ) => {\r\n        const options={ year: 'numeric', month: 'long', day: 'numeric' };\r\n        const date=new Date( dateString );\r\n        return date.toLocaleDateString( undefined, options );\r\n    };\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <Navbar />\r\n            {posts.map( ( post ) =>\r\n                post.messagesList.map( ( message ) => (\r\n                    <Card\r\n                        key={message._id}\r\n                        username={post.username.toUpperCase()}\r\n                        userPost={message.userPost}\r\n                        likes={message.likes}\r\n                        disLikes={message.disLikes}\r\n                        date={formatDate( message.date )}\r\n                        onLike={() => likePost( message._id )}\r\n                        onDislike={() => dislikePost( message._id )}\r\n                    />\r\n                ) )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timeline;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}