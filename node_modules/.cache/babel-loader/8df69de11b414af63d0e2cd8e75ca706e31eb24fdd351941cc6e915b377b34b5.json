{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import './Friend.css';\n// import Navbar from './Navbar';\n// import { baseurl } from '../url';\n// import axiosInstance from '../axiosConfig';\n// import FriendsNavbar from './FriendsNavbar';\n// import Loading from './Loading'; // Assuming you have a Loading component\n\n// const FriendComponent=() => {\n//     const [receivedRequests, setReceivedRequests]=useState( [] ); // To store received friend requests\n//     const [loading, setLoading]=useState( true ); // To manage loading state\n\n//     useEffect( () => {\n//         const fetchAllUsers=async () => {\n//             try {\n//                 const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\n//                     withCredentials: true, // Include credentials in the request\n//                 } );\n//                 console.log( response.data );\n//                 setLoading( false );\n//             } catch ( error ) {\n//                 console.error( 'Error fetching all users:', error );\n//                 setLoading( false );\n//             }\n//         };\n\n//         fetchAllUsers();\n//     }, [] );\n\n//     useEffect( () => {\n//         const fetchReceivedRequests=async () => {\n//             try {\n//                 const response=await axiosInstance.get( `${ baseurl }/friend/recievedReq`, {\n//                     withCredentials: true,\n//                 } );\n//                 const requests=response.data;\n//                 console.log( 'Received Requests:', requests );\n\n//                 // Update received requests state\n//                 setReceivedRequests( requests );\n//             } catch ( error ) {\n//                 console.error( 'Error fetching received friend requests:', error );\n//             }\n//         };\n\n//         fetchReceivedRequests();\n//     }, [] );\n\n//     const acceptFriendRequest=async ( requestId ) => {\n//         try {\n//             const response=await axiosInstance.post(\n//                 `${ baseurl }/friend/pending/${ requestId }`,\n//                 {},\n//                 {\n//                     withCredentials: true,\n//                 }\n//             );\n//             console.log( 'Friend request accepted:', response.data );\n\n//             // Remove the accepted request from the receivedRequests state\n//             setReceivedRequests( ( prev ) =>\n//                 prev.filter( ( request ) => request._id!==requestId )\n//             );\n//         } catch ( error ) {\n//             console.error( 'Error accepting friend request:', error );\n//         }\n//     };\n\n//     const capitalizeFirstLetter=( string ) => {\n//         return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\n//     };\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div className=\"friend-container\">\n//                 {/* {loading? (\n//                     <Loading />\n//                 ):( */}\n//                 <div className=\"content\">\n//                     <FriendsNavbar />\n//                     <div className=\"received-requests\">\n//                         <h2>Received Friend Requests</h2>\n//                         <ul>\n//                             {receivedRequests.map( ( request ) => (\n//                                 <li key={request._id}>\n//                                     <span className=\"request-from\">\n//                                         Request from: {capitalizeFirstLetter( request.senderName )}\n//                                     </span>\n//                                     <button\n//                                         className=\"accept-request-btn\"\n//                                         onClick={() => acceptFriendRequest( request._id )}\n//                                     >\n//                                         Accept Request\n//                                     </button>\n//                                 </li>\n//                             ) )}\n//                         </ul>\n//                     </div>\n//                 </div>\n//                 {/* )}  used for loading*/}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default FriendComponent;","map":{"version":3,"names":[],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/Friend.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './Friend.css';\r\n// import Navbar from './Navbar';\r\n// import { baseurl } from '../url';\r\n// import axiosInstance from '../axiosConfig';\r\n// import FriendsNavbar from './FriendsNavbar';\r\n// import Loading from './Loading'; // Assuming you have a Loading component\r\n\r\n// const FriendComponent=() => {\r\n//     const [receivedRequests, setReceivedRequests]=useState( [] ); // To store received friend requests\r\n//     const [loading, setLoading]=useState( true ); // To manage loading state\r\n\r\n//     useEffect( () => {\r\n//         const fetchAllUsers=async () => {\r\n//             try {\r\n//                 const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\r\n//                     withCredentials: true, // Include credentials in the request\r\n//                 } );\r\n//                 console.log( response.data );\r\n//                 setLoading( false );\r\n//             } catch ( error ) {\r\n//                 console.error( 'Error fetching all users:', error );\r\n//                 setLoading( false );\r\n//             }\r\n//         };\r\n\r\n//         fetchAllUsers();\r\n//     }, [] );\r\n\r\n//     useEffect( () => {\r\n//         const fetchReceivedRequests=async () => {\r\n//             try {\r\n//                 const response=await axiosInstance.get( `${ baseurl }/friend/recievedReq`, {\r\n//                     withCredentials: true,\r\n//                 } );\r\n//                 const requests=response.data;\r\n//                 console.log( 'Received Requests:', requests );\r\n\r\n//                 // Update received requests state\r\n//                 setReceivedRequests( requests );\r\n//             } catch ( error ) {\r\n//                 console.error( 'Error fetching received friend requests:', error );\r\n//             }\r\n//         };\r\n\r\n//         fetchReceivedRequests();\r\n//     }, [] );\r\n\r\n//     const acceptFriendRequest=async ( requestId ) => {\r\n//         try {\r\n//             const response=await axiosInstance.post(\r\n//                 `${ baseurl }/friend/pending/${ requestId }`,\r\n//                 {},\r\n//                 {\r\n//                     withCredentials: true,\r\n//                 }\r\n//             );\r\n//             console.log( 'Friend request accepted:', response.data );\r\n\r\n//             // Remove the accepted request from the receivedRequests state\r\n//             setReceivedRequests( ( prev ) =>\r\n//                 prev.filter( ( request ) => request._id!==requestId )\r\n//             );\r\n//         } catch ( error ) {\r\n//             console.error( 'Error accepting friend request:', error );\r\n//         }\r\n//     };\r\n\r\n//     const capitalizeFirstLetter=( string ) => {\r\n//         return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <Navbar />\r\n//             <div className=\"friend-container\">\r\n//                 {/* {loading? (\r\n//                     <Loading />\r\n//                 ):( */}\r\n//                 <div className=\"content\">\r\n//                     <FriendsNavbar />\r\n//                     <div className=\"received-requests\">\r\n//                         <h2>Received Friend Requests</h2>\r\n//                         <ul>\r\n//                             {receivedRequests.map( ( request ) => (\r\n//                                 <li key={request._id}>\r\n//                                     <span className=\"request-from\">\r\n//                                         Request from: {capitalizeFirstLetter( request.senderName )}\r\n//                                     </span>\r\n//                                     <button\r\n//                                         className=\"accept-request-btn\"\r\n//                                         onClick={() => acceptFriendRequest( request._id )}\r\n//                                     >\r\n//                                         Accept Request\r\n//                                     </button>\r\n//                                 </li>\r\n//                             ) )}\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//                 {/* )}  used for loading*/}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default FriendComponent;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}