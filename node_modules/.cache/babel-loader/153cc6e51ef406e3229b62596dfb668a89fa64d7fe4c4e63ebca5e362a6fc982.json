{"ast":null,"code":"var _jsxFileName = \"D:\\\\May2024-projects\\\\react-client\\\\src\\\\Component\\\\Friend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Friend.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendComponent = () => {\n  _s();\n  const [session, setSession] = useState(null); // Use null for initial state\n  const [allUsers, setAllUsers] = useState([]); // To store all users\n  const [receivedRequests, setReceivedRequests] = useState([]); // To store received friend requests\n  const [sentRequests, setSentRequests] = useState(new Set()); // To track sent friend requests\n  const [loading, setLoading] = useState(true); // To manage loading state\n\n  useEffect(() => {\n    const fetchLoginUserId = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/session', {\n          withCredentials: true // Include credentials in the request\n        });\n        const data = response.data;\n        console.log(data);\n        setSession(data);\n      } catch (error) {\n        console.error('Error fetching session data:', error);\n      }\n    };\n    fetchLoginUserId();\n  }, []);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/user/all', {\n          withCredentials: true // Include credentials in the request\n        });\n        const allUserData = response.data;\n        console.log(allUserData);\n        setAllUsers(allUserData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching all users:', error);\n        setLoading(false);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n  useEffect(() => {\n    const fetchReceivedRequests = async () => {\n      try {\n        if (session) {\n          const response = await axios.get('http://localhost:5000/friend/recievedReq', {\n            withCredentials: true\n          });\n          const requests = response.data;\n          console.log('Received Requests:', requests);\n          setReceivedRequests(requests);\n        }\n      } catch (error) {\n        console.error('Error fetching received friend requests:', error);\n      }\n    };\n    fetchReceivedRequests();\n  }, [session]);\n  const sendFriendRequest = async userId => {\n    try {\n      if (session) {\n        const response = await axios.post(`http://localhost:5000/friend/req/${userId}`, {}, {\n          withCredentials: true // Include credentials in the request\n        });\n        console.log('Friend request sent:', response.data);\n        setSentRequests(prev => new Set(prev).add(userId));\n      } else {\n        console.error('User session not found');\n      }\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n  const acceptFriendRequest = async requestId => {\n    try {\n      const response = await axios.post(`http://localhost:5000/friend/accept/${requestId}`, {}, {\n        withCredentials: true\n      });\n      console.log('Friend request accepted:', response.data);\n      setReceivedRequests(prev => prev.filter(request => request._id !== requestId));\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend-container\",\n    children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", session.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", session.Userid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading session...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" (\", user.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-request-btn\",\n            onClick: () => sendFriendRequest(user._id),\n            disabled: sentRequests.has(user._id),\n            children: sentRequests.has(user._id) ? 'Request Sent' : 'Send Friend Request'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"received-requests\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Received Friend Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: receivedRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"request-from\",\n            children: [\"Request from: \", request.senderName, \" (\", request.senderEmail, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-request-btn\",\n            onClick: () => acceptFriendRequest(request._id),\n            children: \"Acc Req\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, request._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendComponent, \"SlZ28RceD5kofjei9UxvTw/dky8=\");\n_c = FriendComponent;\nexport default FriendComponent;\nvar _c;\n$RefreshReg$(_c, \"FriendComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FriendComponent","_s","session","setSession","allUsers","setAllUsers","receivedRequests","setReceivedRequests","sentRequests","setSentRequests","Set","loading","setLoading","fetchLoginUserId","response","get","withCredentials","data","console","log","error","fetchAllUsers","allUserData","fetchReceivedRequests","requests","sendFriendRequest","userId","post","prev","add","acceptFriendRequest","requestId","filter","request","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","Userid","map","user","email","onClick","disabled","has","senderName","senderEmail","_c","$RefreshReg$"],"sources":["D:/May2024-projects/react-client/src/Component/Friend.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Friend.css';\r\n\r\nconst FriendComponent=() => {\r\n    const [session, setSession]=useState( null ); // Use null for initial state\r\n    const [allUsers, setAllUsers]=useState( [] ); // To store all users\r\n    const [receivedRequests, setReceivedRequests]=useState( [] ); // To store received friend requests\r\n    const [sentRequests, setSentRequests]=useState( new Set() ); // To track sent friend requests\r\n    const [loading, setLoading]=useState( true ); // To manage loading state\r\n\r\n    useEffect( () => {\r\n        const fetchLoginUserId=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/session', {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                const data=response.data;\r\n                console.log( data );\r\n                setSession( data );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching session data:', error );\r\n            }\r\n        };\r\n\r\n        fetchLoginUserId();\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axios.get( 'http://localhost:5000/user/all', {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                const allUserData=response.data;\r\n                console.log( allUserData );\r\n                setAllUsers( allUserData );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching all users:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        const fetchReceivedRequests=async () => {\r\n            try {\r\n                if ( session ) {\r\n                    const response=await axios.get( 'http://localhost:5000/friend/recievedReq', {\r\n                        withCredentials: true\r\n                    } );\r\n                    const requests=response.data;\r\n                    console.log( 'Received Requests:', requests );\r\n                    setReceivedRequests( requests );\r\n                }\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching received friend requests:', error );\r\n            }\r\n        };\r\n\r\n        fetchReceivedRequests();\r\n    }, [session] );\r\n\r\n    const sendFriendRequest=async ( userId ) => {\r\n        try {\r\n            if ( session ) {\r\n                const response=await axios.post( `http://localhost:5000/friend/req/${ userId }`, {}, {\r\n                    withCredentials: true // Include credentials in the request\r\n                } );\r\n                console.log( 'Friend request sent:', response.data );\r\n                setSentRequests( ( prev ) => new Set( prev ).add( userId ) );\r\n            } else {\r\n                console.error( 'User session not found' );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n        }\r\n    };\r\n\r\n    const acceptFriendRequest=async ( requestId ) => {\r\n        try {\r\n            const response=await axios.post( `http://localhost:5000/friend/accept/${ requestId }`, {}, {\r\n                withCredentials: true\r\n            } );\r\n            console.log( 'Friend request accepted:', response.data );\r\n            setReceivedRequests( ( prev ) => prev.filter( request => request._id!==requestId ) );\r\n        } catch ( error ) {\r\n            console.error( 'Error accepting friend request:', error );\r\n        }\r\n    };\r\n\r\n    if ( loading ) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"friend-container\">\r\n            {session? (\r\n                <div className=\"welcome-message\">\r\n                    <h1>Welcome, {session.name}</h1>\r\n                    <p>User ID: {session.Userid}</p>\r\n                </div>\r\n            ):(\r\n                <p>Loading session...</p>\r\n            )}\r\n            <div className=\"all-users\">\r\n                <h2>All Users</h2>\r\n                <ul>\r\n                    {allUsers.map( user => (\r\n                        <li key={user._id}>\r\n                            {user.name} ({user.email})\r\n                            <button\r\n                                className=\"send-request-btn\"\r\n                                onClick={() => sendFriendRequest( user._id )}\r\n                                disabled={sentRequests.has( user._id )}\r\n                            >\r\n                                {sentRequests.has( user._id )? 'Request Sent':'Send Friend Request'}\r\n                            </button>\r\n                        </li>\r\n                    ) )}\r\n                </ul>\r\n            </div>\r\n            <div className=\"received-requests\">\r\n                <h2>Received Friend Requests</h2>\r\n                <ul>\r\n                    {receivedRequests.map( request => (\r\n                        <li key={request._id}>\r\n                            <span className=\"request-from\">Request from: {request.senderName} ({request.senderEmail})</span>\r\n                            <button\r\n                                className=\"accept-request-btn\"\r\n                                onClick={() => acceptFriendRequest( request._id )}\r\n                            >\r\n                                Acc Req\r\n                            </button>\r\n                        </li>\r\n                    ) )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}