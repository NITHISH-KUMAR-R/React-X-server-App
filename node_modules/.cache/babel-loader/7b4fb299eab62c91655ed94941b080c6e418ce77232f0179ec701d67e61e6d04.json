{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_jsProject\\\\react-client\\\\src\\\\Component\\\\FriendsPostonly.jsx\",\n  _s = $RefreshSig$();\n// src/Component/FriendPosts.js\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './Card.css';\nimport Navbar from './Navbar';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst FriendPosts = () => {\n  _s();\n  const [friendPosts, setFriendPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFriendPosts = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/msg/displayFrndPost`, {\n          withCredentials: true\n        });\n        console.log(response.data);\n        setFriendPosts(response.data.friendPosts || []);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching friend posts:', error);\n        setLoading(false);\n      }\n    };\n    fetchFriendPosts();\n  }, []);\n  const likePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/likes/${postId}`);\n      console.log(`Liked post with ID: ${postId}`, response);\n      if (response.status === 200) {\n        const updatedPost = response.data.post;\n        setFriendPosts(prevPosts => prevPosts.map(post => post.messagesList.map(message => message._id === postId ? {\n          ...message,\n          likes: updatedPost.likes\n        } : message)));\n      }\n    } catch (error) {\n      console.error(`Error liking post with ID: ${postId}`, error);\n    }\n  };\n  const dislikePost = async postId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/heart/dislike/${postId}`);\n      console.log(`Disliked post with ID: ${postId}`, response);\n      if (response.status === 200) {\n        const updatedPost = response.data.post;\n        setFriendPosts(prevPosts => prevPosts.map(post => post.messagesList.map(message => message._id === postId ? {\n          ...message,\n          disLikes: updatedPost.disLikes\n        } : message)));\n      }\n    } catch (error) {\n      console.error(`Error disliking post with ID: ${postId}`, error);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friend posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), !loading && friendPosts.length > 0 && friendPosts.map(post => post.messagesList.map(message => /*#__PURE__*/_jsxDEV(Card, {\n      username: post.username.toUpperCase(),\n      userPost: message.userPost,\n      likes: message.likes,\n      disLikes: message.disLikes,\n      date: formatDate(message.date),\n      onLike: () => likePost(message._id) // Pass the likePost function with the messageId\n      ,\n      onDislike: () => dislikePost(message._id) // Pass the dislikePost function with the messageId\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendPosts, \"+24iiFbqDOWH1RRoR/WfnIgTkt0=\");\n_c = FriendPosts;\nexport default FriendPosts;\nvar _c;\n$RefreshReg$(_c, \"FriendPosts\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","baseurl","axiosInstance","jsxDEV","_jsxDEV","axios","defaults","withCredentials","FriendPosts","_s","friendPosts","setFriendPosts","loading","setLoading","fetchFriendPosts","response","get","console","log","data","error","likePost","postId","post","status","updatedPost","prevPosts","map","messagesList","message","_id","likes","dislikePost","disLikes","formatDate","dateString","options","year","month","day","date","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","username","toUpperCase","userPost","onLike","onDislike","_c","$RefreshReg$"],"sources":["D:/Node_jsProject/react-client/src/Component/FriendsPostonly.jsx"],"sourcesContent":["// src/Component/FriendPosts.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './Card.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\nconst FriendPosts=() => {\r\n    const [friendPosts, setFriendPosts]=useState( [] );\r\n    const [loading, setLoading]=useState( true );\r\n\r\n    useEffect( () => {\r\n        const fetchFriendPosts=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/msg/displayFrndPost`, {\r\n                    withCredentials: true\r\n                } );\r\n                console.log( response.data );\r\n                setFriendPosts( response.data.friendPosts||[] );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching friend posts:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchFriendPosts();\r\n    }, [] );\r\n\r\n    const likePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/likes/${ postId }` );\r\n            console.log( `Liked post with ID: ${ postId }`, response );\r\n\r\n            if ( response.status===200 ) {\r\n                const updatedPost=response.data.post;\r\n                setFriendPosts( ( prevPosts ) =>\r\n                    prevPosts.map( ( post ) =>\r\n                        post.messagesList.map( ( message ) =>\r\n                            message._id===postId\r\n                                ? { ...message, likes: updatedPost.likes }\r\n                                :message\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( `Error liking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const dislikePost=async ( postId ) => {\r\n        try {\r\n            const response=await axiosInstance.post( `${ baseurl }/heart/dislike/${ postId }` );\r\n            console.log( `Disliked post with ID: ${ postId }`, response );\r\n\r\n            if ( response.status===200 ) {\r\n                const updatedPost=response.data.post;\r\n                setFriendPosts( ( prevPosts ) =>\r\n                    prevPosts.map( ( post ) =>\r\n                        post.messagesList.map( ( message ) =>\r\n                            message._id===postId\r\n                                ? { ...message, disLikes: updatedPost.disLikes }\r\n                                :message\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        } catch ( error ) {\r\n            console.error( `Error disliking post with ID: ${ postId }`, error );\r\n        }\r\n    };\r\n\r\n    const formatDate=( dateString ) => {\r\n        const options={ year: 'numeric', month: 'long', day: 'numeric' };\r\n        const date=new Date( dateString );\r\n        return date.toLocaleDateString( undefined, options );\r\n    };\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <Navbar />\r\n\r\n            {loading&&(\r\n                <div className=\"loading-spinner\"></div>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length===0&&(\r\n                <p>No friend posts available.</p>\r\n            )}\r\n\r\n            {!loading&&friendPosts.length>0&&(\r\n                friendPosts.map( post => (\r\n                    post.messagesList.map( message => (\r\n                        <Card\r\n                            key={message._id}\r\n                            username={post.username.toUpperCase()}\r\n                            userPost={message.userPost}\r\n                            likes={message.likes}\r\n                            disLikes={message.disLikes}\r\n                            date={formatDate( message.date )}\r\n                            onLike={() => likePost( message._id )} // Pass the likePost function with the messageId\r\n                            onDislike={() => dislikePost( message._id )} // Pass the dislikePost function with the messageId\r\n                        />\r\n                    ) )\r\n                ) )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}