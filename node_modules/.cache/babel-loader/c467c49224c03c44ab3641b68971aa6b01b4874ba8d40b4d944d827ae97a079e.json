{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./Friend.css';import Navbar from'./Navbar';import{baseurl}from'../url';import axiosInstance from'../axiosConfig';import FriendsNavbar from'./FriendsNavbar';import Loading from'./Loading';// Assuming you have a Loading component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FriendComponent=()=>{const[receivedRequests,setReceivedRequests]=useState([]);// To store received friend requests\nconst[loading,setLoading]=useState(true);// To manage loading state\nuseEffect(()=>{const fetchAllUsers=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/friend/unkownuser\"),{withCredentials:true// Include credentials in the request\n});console.log(response.data);setLoading(false);}catch(error){console.error('Error fetching all users:',error);setLoading(false);}};fetchAllUsers();},[]);useEffect(()=>{const fetchReceivedRequests=async()=>{try{const response=await axiosInstance.get(\"\".concat(baseurl,\"/friend/recievedReq\"),{withCredentials:true});const requests=response.data;console.log('Received Requests:',requests);// Update received requests state\nsetReceivedRequests(requests);}catch(error){console.error('Error fetching received friend requests:',error);}};fetchReceivedRequests();},[]);const acceptFriendRequest=async requestId=>{try{const response=await axiosInstance.post(\"\".concat(baseurl,\"/friend/pending/\").concat(requestId),{},{withCredentials:true});console.log('Friend request accepted:',response.data);// Remove the accepted request from the receivedRequests state\nsetReceivedRequests(prev=>prev.filter(request=>request._id!==requestId));}catch(error){console.error('Error accepting friend request:',error);}};const capitalizeFirstLetter=string=>{return string.charAt(0).toUpperCase()+string.slice(1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"friend-container\",children:[/*#__PURE__*/_jsx(FriendsNavbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"received-requests\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Received Friend Requests\"}),/*#__PURE__*/_jsx(\"ul\",{children:receivedRequests.map(request=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"request-from\",children:[\"Request from: \",capitalizeFirstLetter(request.senderName)]}),/*#__PURE__*/_jsx(\"button\",{className:\"accept-request-btn\",onClick:()=>acceptFriendRequest(request._id),children:\"Accept Request\"})]},request._id))})]})})]})]});};export default FriendComponent;","map":{"version":3,"names":["React","useEffect","useState","Navbar","baseurl","axiosInstance","FriendsNavbar","Loading","jsx","_jsx","jsxs","_jsxs","FriendComponent","receivedRequests","setReceivedRequests","loading","setLoading","fetchAllUsers","response","get","concat","withCredentials","console","log","data","error","fetchReceivedRequests","requests","acceptFriendRequest","requestId","post","prev","filter","request","_id","capitalizeFirstLetter","string","charAt","toUpperCase","slice","children","className","map","senderName","onClick"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/Friend.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Friend.css';\r\nimport Navbar from './Navbar';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\nimport FriendsNavbar from './FriendsNavbar';\r\nimport Loading from './Loading'; // Assuming you have a Loading component\r\n\r\nconst FriendComponent=() => {\r\n    const [receivedRequests, setReceivedRequests]=useState( [] ); // To store received friend requests\r\n    const [loading, setLoading]=useState( true ); // To manage loading state\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\r\n                    withCredentials: true, // Include credentials in the request\r\n                } );\r\n                console.log( response.data );\r\n                setLoading( false );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching all users:', error );\r\n                setLoading( false );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        const fetchReceivedRequests=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/recievedReq`, {\r\n                    withCredentials: true,\r\n                } );\r\n                const requests=response.data;\r\n                console.log( 'Received Requests:', requests );\r\n\r\n                // Update received requests state\r\n                setReceivedRequests( requests );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching received friend requests:', error );\r\n            }\r\n        };\r\n\r\n        fetchReceivedRequests();\r\n    }, [] );\r\n\r\n    const acceptFriendRequest=async ( requestId ) => {\r\n        try {\r\n            const response=await axiosInstance.post(\r\n                `${ baseurl }/friend/pending/${ requestId }`,\r\n                {},\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            console.log( 'Friend request accepted:', response.data );\r\n\r\n            // Remove the accepted request from the receivedRequests state\r\n            setReceivedRequests( ( prev ) =>\r\n                prev.filter( ( request ) => request._id!==requestId )\r\n            );\r\n        } catch ( error ) {\r\n            console.error( 'Error accepting friend request:', error );\r\n        }\r\n    };\r\n\r\n    const capitalizeFirstLetter=( string ) => {\r\n        return string.charAt( 0 ).toUpperCase()+string.slice( 1 );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"friend-container\">\r\n                {/* {loading? (\r\n                    <Loading />\r\n                ):( */}\r\n                <FriendsNavbar />\r\n                <div className=\"content\">\r\n\r\n                    <div className=\"received-requests\">\r\n                        <h2>Received Friend Requests</h2>\r\n                        <ul>\r\n                            {receivedRequests.map( ( request ) => (\r\n                                <li key={request._id}>\r\n                                    <span className=\"request-from\">\r\n                                        Request from: {capitalizeFirstLetter( request.senderName )}\r\n                                    </span>\r\n                                    <button\r\n                                        className=\"accept-request-btn\"\r\n                                        onClick={() => acceptFriendRequest( request._id )}\r\n                                    >\r\n                                        Accept Request\r\n                                    </button>\r\n                                </li>\r\n                            ) )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* )}  used for loading*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}