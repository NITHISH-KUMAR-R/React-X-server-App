{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nithi\\\\Downloads\\\\NewProjects\\\\react-client\\\\src\\\\Component\\\\Friend3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { baseurl } from '../url';\nimport axiosInstance from '../axiosConfig';\nimport './Friend3.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friend3 = () => {\n  _s();\n  const [allUsers, setAllUsers] = useState([]);\n  const [sentRequests, setSentRequests] = useState(new Set());\n  const [receivedRequests, setReceivedRequests] = useState([]);\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/friend/unkownuser`, {\n          withCredentials: true\n        });\n        const allUserData = response.data;\n        console.log(allUserData);\n        setAllUsers(allUserData);\n      } catch (error) {\n        console.error('Error fetching all users:', error);\n      }\n    };\n    const fetchPendingRequests = async () => {\n      try {\n        const response = await axiosInstance.get(`${baseurl}/friend/pendingReq`, {\n          withCredentials: true\n        });\n        const {\n          sentRequests,\n          receivedRequests\n        } = response.data;\n        setSentRequests(new Set(sentRequests.map(request => request.receiver._id)));\n        setReceivedRequests(receivedRequests);\n      } catch (error) {\n        console.error('Error fetching pending requests:', error);\n      }\n    };\n    fetchAllUsers();\n    fetchPendingRequests();\n  }, []);\n  const sendFriendRequest = async userId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/friend/req/${userId}`, {}, {\n        withCredentials: true\n      });\n      console.log('Friend request sent:', response.data);\n      setSentRequests(prev => new Set(prev).add(userId));\n    } catch (error) {\n      console.error('Error sending friend request:', error);\n    }\n  };\n  const acceptFriendRequest = async requestId => {\n    try {\n      const response = await axiosInstance.post(`${baseurl}/friend/pending/${requestId}`, {}, {\n        withCredentials: true\n      });\n      console.log('Friend request accepted:', response.data);\n\n      // Remove the accepted request from the receivedRequests state\n      setReceivedRequests(prev => prev.filter(request => request._id !== requestId));\n    } catch (error) {\n      console.error('Error accepting friend request:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-friend3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), allUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendFriendRequest(user._id),\n          className: \"button\",\n          disabled: sentRequests.has(user._id),\n          children: sentRequests.has(user._id) ? 'Request Sent' : 'Send Request'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Received Friend Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), receivedRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No received friend requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this) : receivedRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [request.sender.username, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptFriendRequest(request._id),\n          className: \"button\",\n          children: \"Accept Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Friend3, \"OHMA6fEoR+DCjteM6BknceTyHNo=\");\n_c = Friend3;\nexport default Friend3;\nvar _c;\n$RefreshReg$(_c, \"Friend3\");","map":{"version":3,"names":["React","useEffect","useState","baseurl","axiosInstance","jsxDEV","_jsxDEV","Friend3","_s","allUsers","setAllUsers","sentRequests","setSentRequests","Set","receivedRequests","setReceivedRequests","fetchAllUsers","response","get","withCredentials","allUserData","data","console","log","error","fetchPendingRequests","map","request","receiver","_id","sendFriendRequest","userId","post","prev","add","acceptFriendRequest","requestId","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","user","username","onClick","disabled","has","length","sender","_c","$RefreshReg$"],"sources":["C:/Users/nithi/Downloads/NewProjects/react-client/src/Component/Friend3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { baseurl } from '../url';\r\nimport axiosInstance from '../axiosConfig';\r\nimport './Friend3.css';\r\n\r\nconst Friend3=() => {\r\n    const [allUsers, setAllUsers]=useState( [] );\r\n    const [sentRequests, setSentRequests]=useState( new Set() );\r\n    const [receivedRequests, setReceivedRequests]=useState( [] );\r\n\r\n    useEffect( () => {\r\n        const fetchAllUsers=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/unkownuser`, {\r\n                    withCredentials: true,\r\n                } );\r\n                const allUserData=response.data;\r\n                console.log( allUserData );\r\n                setAllUsers( allUserData );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching all users:', error );\r\n            }\r\n        };\r\n\r\n        const fetchPendingRequests=async () => {\r\n            try {\r\n                const response=await axiosInstance.get( `${ baseurl }/friend/pendingReq`, {\r\n                    withCredentials: true,\r\n                } );\r\n                const { sentRequests, receivedRequests }=response.data;\r\n\r\n                setSentRequests( new Set( sentRequests.map( request => request.receiver._id ) ) );\r\n                setReceivedRequests( receivedRequests );\r\n            } catch ( error ) {\r\n                console.error( 'Error fetching pending requests:', error );\r\n            }\r\n        };\r\n\r\n        fetchAllUsers();\r\n        fetchPendingRequests();\r\n    }, [] );\r\n\r\n    const sendFriendRequest=async ( userId ) => {\r\n        try {\r\n            const response=await axiosInstance.post(\r\n                `${ baseurl }/friend/req/${ userId }`,\r\n                {},\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            console.log( 'Friend request sent:', response.data );\r\n\r\n            setSentRequests( prev => new Set( prev ).add( userId ) );\r\n        } catch ( error ) {\r\n            console.error( 'Error sending friend request:', error );\r\n        }\r\n    };\r\n\r\n    const acceptFriendRequest=async ( requestId ) => {\r\n        try {\r\n            const response=await axiosInstance.post(\r\n                `${ baseurl }/friend/pending/${ requestId }`,\r\n                {},\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            console.log( 'Friend request accepted:', response.data );\r\n\r\n            // Remove the accepted request from the receivedRequests state\r\n            setReceivedRequests( prev => prev.filter( request => request._id!==requestId ) );\r\n        } catch ( error ) {\r\n            console.error( 'Error accepting friend request:', error );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container-friend3'>\r\n                <h2>All Users</h2>\r\n                {allUsers.map( ( user ) => (\r\n                    <li key={user._id}>\r\n                        {user.username}\r\n                        <button\r\n                            onClick={() => sendFriendRequest( user._id )}\r\n                            className='button'\r\n                            disabled={sentRequests.has( user._id )}\r\n                        >\r\n                            {sentRequests.has( user._id )? 'Request Sent':'Send Request'}\r\n                        </button>\r\n                    </li>\r\n                ) )}\r\n\r\n                <h2>Received Friend Requests</h2>\r\n                {receivedRequests.length===0? (\r\n                    <p>No received friend requests.</p>\r\n                ):(\r\n                    receivedRequests.map( ( request ) => (\r\n                        <li key={request._id}>\r\n                            {request.sender.username}\r\n                            <button\r\n                                onClick={() => acceptFriendRequest( request._id )}\r\n                                className='button'\r\n                            >\r\n                                Accept Friend\r\n                            </button>\r\n                        </li>\r\n                    ) )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend3;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,QAAQ;AAChC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAACA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACR,QAAQ,CAAE,EAAG,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAACV,QAAQ,CAAE,IAAIW,GAAG,CAAC,CAAE,CAAC;EAC3D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAACb,QAAQ,CAAE,EAAG,CAAC;EAE5DD,SAAS,CAAE,MAAM;IACb,MAAMe,aAAa,GAAC,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAC,MAAMb,aAAa,CAACc,GAAG,CAAG,GAAGf,OAAS,oBAAmB,EAAE;UACtEgB,eAAe,EAAE;QACrB,CAAE,CAAC;QACH,MAAMC,WAAW,GAACH,QAAQ,CAACI,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAAEH,WAAY,CAAC;QAC1BV,WAAW,CAAEU,WAAY,CAAC;MAC9B,CAAC,CAAC,OAAQI,KAAK,EAAG;QACdF,OAAO,CAACE,KAAK,CAAE,2BAA2B,EAAEA,KAAM,CAAC;MACvD;IACJ,CAAC;IAED,MAAMC,oBAAoB,GAAC,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMR,QAAQ,GAAC,MAAMb,aAAa,CAACc,GAAG,CAAG,GAAGf,OAAS,oBAAmB,EAAE;UACtEgB,eAAe,EAAE;QACrB,CAAE,CAAC;QACH,MAAM;UAAER,YAAY;UAAEG;QAAiB,CAAC,GAACG,QAAQ,CAACI,IAAI;QAEtDT,eAAe,CAAE,IAAIC,GAAG,CAAEF,YAAY,CAACe,GAAG,CAAEC,OAAO,IAAIA,OAAO,CAACC,QAAQ,CAACC,GAAI,CAAE,CAAE,CAAC;QACjFd,mBAAmB,CAAED,gBAAiB,CAAC;MAC3C,CAAC,CAAC,OAAQU,KAAK,EAAG;QACdF,OAAO,CAACE,KAAK,CAAE,kCAAkC,EAAEA,KAAM,CAAC;MAC9D;IACJ,CAAC;IAEDR,aAAa,CAAC,CAAC;IACfS,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMK,iBAAiB,GAAC,MAAQC,MAAM,IAAM;IACxC,IAAI;MACA,MAAMd,QAAQ,GAAC,MAAMb,aAAa,CAAC4B,IAAI,CAClC,GAAG7B,OAAS,eAAe4B,MAAQ,EAAC,EACrC,CAAC,CAAC,EACF;QACIZ,eAAe,EAAE;MACrB,CACJ,CAAC;MACDG,OAAO,CAACC,GAAG,CAAE,sBAAsB,EAAEN,QAAQ,CAACI,IAAK,CAAC;MAEpDT,eAAe,CAAEqB,IAAI,IAAI,IAAIpB,GAAG,CAAEoB,IAAK,CAAC,CAACC,GAAG,CAAEH,MAAO,CAAE,CAAC;IAC5D,CAAC,CAAC,OAAQP,KAAK,EAAG;MACdF,OAAO,CAACE,KAAK,CAAE,+BAA+B,EAAEA,KAAM,CAAC;IAC3D;EACJ,CAAC;EAED,MAAMW,mBAAmB,GAAC,MAAQC,SAAS,IAAM;IAC7C,IAAI;MACA,MAAMnB,QAAQ,GAAC,MAAMb,aAAa,CAAC4B,IAAI,CAClC,GAAG7B,OAAS,mBAAmBiC,SAAW,EAAC,EAC5C,CAAC,CAAC,EACF;QACIjB,eAAe,EAAE;MACrB,CACJ,CAAC;MACDG,OAAO,CAACC,GAAG,CAAE,0BAA0B,EAAEN,QAAQ,CAACI,IAAK,CAAC;;MAExD;MACAN,mBAAmB,CAAEkB,IAAI,IAAIA,IAAI,CAACI,MAAM,CAAEV,OAAO,IAAIA,OAAO,CAACE,GAAG,KAAGO,SAAU,CAAE,CAAC;IACpF,CAAC,CAAC,OAAQZ,KAAK,EAAG;MACdF,OAAO,CAACE,KAAK,CAAE,iCAAiC,EAAEA,KAAM,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAKiC,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAC9BhC,OAAA;QAAAgC,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBlC,QAAQ,CAACiB,GAAG,CAAIkB,IAAI,iBACjBtC,OAAA;QAAAgC,QAAA,GACKM,IAAI,CAACC,QAAQ,eACdvC,OAAA;UACIwC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAAEc,IAAI,CAACf,GAAI,CAAE;UAC7CU,SAAS,EAAC,QAAQ;UAClBQ,QAAQ,EAAEpC,YAAY,CAACqC,GAAG,CAAEJ,IAAI,CAACf,GAAI,CAAE;UAAAS,QAAA,EAEtC3B,YAAY,CAACqC,GAAG,CAAEJ,IAAI,CAACf,GAAI,CAAC,GAAE,cAAc,GAAC;QAAc;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA,GARJC,IAAI,CAACf,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACN,CAAC,eAEHrC,OAAA;QAAAgC,QAAA,EAAI;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChC7B,gBAAgB,CAACmC,MAAM,KAAG,CAAC,gBACxB3C,OAAA;QAAAgC,QAAA,EAAG;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEnC7B,gBAAgB,CAACY,GAAG,CAAIC,OAAO,iBAC3BrB,OAAA;QAAAgC,QAAA,GACKX,OAAO,CAACuB,MAAM,CAACL,QAAQ,eACxBvC,OAAA;UACIwC,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAAER,OAAO,CAACE,GAAI,CAAE;UAClDU,SAAS,EAAC,QAAQ;UAAAD,QAAA,EACrB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPJhB,OAAO,CAACE,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQhB,CACN,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACnC,EAAA,CA5GID,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AA8Gb,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}